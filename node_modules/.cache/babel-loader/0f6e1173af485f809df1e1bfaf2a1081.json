{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js\";\nimport React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite';\nimport { withFirebase } from '../firebase';\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || [];\nlet newID;\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: false,\n      array: []\n    };\n\n    this.handleFavs = props => {\n      newID = this.props.firebase.item(this.props.userID);\n      newID.on(\"child_added\", snap => {\n        let array = [];\n        snap.forEach(child => {\n          array.push([snap.val()]);\n        });\n      });\n      console.log(array);\n      const found = arr.some(el => el.id === props.movie[0].id);\n\n      if (!found) {\n        this.setState({\n          favorite: true\n        });\n        arr.push({\n          id: props.movie[0].id,\n          title: props.movie[0].title,\n          poster_path: props.movie[0].poster_path,\n          favorite: true,\n          release_date: props.movie[0].release_date\n        });\n\n        if (!this.props.firebase.auth.currentUser.isAnonymous) {\n          newID.push({\n            id: props.movie[0].id,\n            title: props.movie[0].title,\n            poster_path: props.movie[0].poster_path,\n            favorite: true,\n            release_date: props.movie[0].release_date\n          });\n        }\n      } else {\n        if (window.confirm(`Remove \"${props.movie[0].title}\" from Favorites?`)) {\n          this.setState({\n            favorite: false\n          });\n          const ref = this.props.firebase.user(this.props.userID).child(\"favorites\").orderByKey();\n          ref.once(\"value\", snap => {\n            snap.forEach(child => {\n              if (props.movie[0].id === child.val().id) {\n                this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"));\n              }\n            });\n          });\n        }\n      }\n      /*\n      if(arr.includes(...props.movie)){\n        const fav = arr.indexOf(...props.movie)\n        arr.splice(fav, 1)\n        localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n      }else{\n        props.movie.map((index, key) => {\n            arr.push(...props.movie)\n            this.setState({\n              favorites: arr\n            })\n          }\n        )\n      }\n      */\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" movie-info\"\n      /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/info/${this.props.id}/${encodeURIComponent(this.props.title)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Favorite, {\n      key: this.props.id,\n      id: this.props.id,\n      title: this.props.title,\n      release_date: this.props.release_date,\n      img: this.props.image,\n      handleFav: this.handleFavs,\n      isLoggedIn: this.props.isLoggedIn,\n      userID: this.props.userID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\n;\nexport default withFirebase(MovieCard);","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js"],"names":["React","Link","Favorite","withFirebase","arr","JSON","parse","localStorage","getItem","newID","MovieCard","Component","state","favorite","array","handleFavs","props","firebase","item","userID","on","snap","forEach","child","push","val","console","log","found","some","el","id","movie","setState","title","poster_path","release_date","auth","currentUser","isAnonymous","window","confirm","ref","user","orderByKey","once","childItems","key","then","render","encodeURIComponent","image","width","isLoggedIn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite'\nimport {withFirebase} from '../firebase'\n\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || []\nlet newID\n\n\nclass MovieCard extends React.Component {\n\n  \n  state = {\n    favorite: false,\n    array: []\n  }\n\n  \nhandleFavs = (props) => {\n  newID  = this.props.firebase.item(this.props.userID)\n  \n  newID.on(\"child_added\", snap => {\n    let array = []\n    snap.forEach((child) => {\n      array.push([snap.val()])\n\n    })\n  \n  })\n  console.log(array)\n\n  const found = arr.some(el => el.id === props.movie[0].id)\n  \n    if (!found){\n      this.setState({\n        favorite: true\n      })\n      \n      arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n      if(!this.props.firebase.auth.currentUser.isAnonymous){\n      newID.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n\n    }\n  }\n  else{\n    if(window.confirm(`Remove \"${props.movie[0].title}\" from Favorites?`)){\n\n    this.setState({\n      favorite: false\n    })\n   \n    const ref = this.props.firebase.user(this.props.userID).child(\"favorites\").orderByKey()\n    ref.once(\"value\", snap => {\n    snap.forEach(child => {\n      if(props.movie[0].id === child.val().id){\n        this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"))\n      }\n    })\n  })\n\n}\n  }\n  /*\n  if(arr.includes(...props.movie)){\n    const fav = arr.indexOf(...props.movie)\n    arr.splice(fav, 1)\n    localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n  }else{\n    props.movie.map((index, key) => {\n        arr.push(...props.movie)\n        this.setState({\n          favorites: arr\n        })\n      }\n    )\n  }\n  */\n\n\n}\n\n\n\n\n\nrender(){\n\n  return (\n    <div className=\"movie-list\">\n      <div\n        className=\" movie-info\" /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      >\n        <Link to={`/info/${this.props.id}/${encodeURIComponent(this.props.title)}`}>\n          <img src={this.props.image} style={{ width: \"100%\" }} alt=\"Movie\" />\n            \n        </Link>\n      </div>  \n         <Favorite key={this.props.id} id={this.props.id} title={this.props.title} release_date={this.props.release_date} img={this.props.image} handleFav={this.handleFavs} isLoggedIn={this.props.isLoggedIn} userID={this.props.userID}/>\n    </div>\n  );\n}\n};\n\nexport default withFirebase(MovieCard);\n"]},"metadata":{},"sourceType":"module"}