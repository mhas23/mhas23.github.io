{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/Pages/MovieInfo/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Search from '../../components/Search';\nimport Header from '../../components/Header';\nimport '../../components/Search/Search.css';\nimport Movie_API from '../../api/Movie_API';\nimport '../styles.css';\nimport Logo from '../../components/TMDB-Image';\nimport Favorites from '../../components/Movies/Favorite';\n/*\nconst MovieInfo = () => {\n    \n    return(\n        <div>\n           <Header />\n           <Icon />\n           <div style={{textAlign:\"center\"}}>\n               jkjkjkjkj\n           </div>\n           <div style={{textAlign:\"center\", position:'relative', top:'100px'}}>\n               <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p>\n           </div>\n           <div style={{marginTop:\"550px\"}}>\n                <Search  />\n           </div>\n        </div>\n    )\n}\n*/\n\nfunction MovieInfo({\n  match\n}) {\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const fetchInfo = await Movie_API.get(`/movie/${match.params.id}`, {\n        params: {\n          api_key: process.env.REACT_APP_API,\n          language: 'en-US'\n        }\n      });\n      const info = await fetchInfo.data;\n      setInfo(info);\n      window.scrollTo(0, 0);\n    };\n\n    fetchInfo();\n  }, [match]);\n  const [info, setInfo] = useState({});\n  return (\n    /*#__PURE__*/\n\n    /*\n                <div>\n                <Header />\n                <div className=\"title\">\n                    { info.title !== info.original_title ? <h2> {`${info.title} (${info.original_title})`}</h2> : <h2 style={{display:'inline-block'}}> {info.original_title}</h2>}\n                     <h2 style={{display:'inline-block', marginLeft:'10px'}}>({info.release_date})</h2>\n                </div>\n                <div style={{marginLeft:'20px'}}>\n                    <div className=\"movie\">\n                        <img src={`https://image.tmdb.org/t/p/w185${info.poster_path}`} className=\"movie-img\" alt=\"Movie title\"/>\n                        <Favorites />\n                    </div>\n                    <span>\n                        <h3 style={{textAlign:'left' ,display:'inline-block', marginLeft:'100px'}}>Rating: {info.vote_average}/10</h3>\n                    </span>\n                    <div className=\"description\">\n                        <p style={{display:'inline-block'}}>{info.overview === \"\" ? \"No info here\" : info.overview } </p>\n                    </div>\n               \n                    \n                </div>\n                \n                <div style={{marginTop:\"550px\"}}>\n                <h2 style={{display: 'inline', position:'relative', bottom:'200px', left:'600px'}}>Continue Searching Below <span role=\"img\" aria-label=\"down\">⬇️</span> </h2>\n                \n                    <Search  />\n                </div>\n    \n                <Logo />\n                \n                </div>\n    \n                */\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, info.title !== info.original_title ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 64\n      }\n    }, \" \", `${info.title} (${info.original_title})`) : /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 119\n      }\n    }, \" \", info.original_title), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        display: 'inline-block',\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"(\", info.release_date, \")\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://image.tmdb.org/t/p/w185${info.poster_path}`,\n      alt: \"Movie Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Favorites, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'auto auto auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: \"/*! width: 50%; */\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 26\n      }\n    }, \"Rating: 7.4/10\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 1\n      }\n    }, \"Voter Count: 2233\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }\n    }, \"Runtime: 106 minutes\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, info.overview === \"\" ? \"No info here\" : info.overview, \" \"))), /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }))\n  );\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/Pages/MovieInfo/index.js"],"names":["React","useState","useEffect","Search","Header","Movie_API","Logo","Favorites","MovieInfo","match","fetchInfo","get","params","id","api_key","process","env","REACT_APP_API","language","info","data","setInfo","window","scrollTo","display","flexDirection","title","original_title","marginLeft","release_date","poster_path","gridTemplateColumns","overview"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,oCAAP;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAGA;;;;;;;;;;;;;;;;;;;;;AAuBK,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA4B;AACzBP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,SAAS,GAAG,YAAY;AAC1B,YAAMA,SAAS,GAAG,MAAML,SAAS,CAACM,GAAV,CAAe,UAASF,KAAK,CAACG,MAAN,CAAaC,EAAG,EAAxC,EAA0C;AAC9DD,QAAAA,MAAM,EAAC;AACHE,UAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADlB;AAEHC,UAAAA,QAAQ,EAAE;AAFP;AADuD,OAA1C,CAAxB;AAMA,YAAMC,IAAI,GAAG,MAAMT,SAAS,CAACU,IAA7B;AAEAC,MAAAA,OAAO,CAACF,IAAD,CAAP;AACAG,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEH,KAZD;;AAaAb,IAAAA,SAAS;AACZ,GAfQ,EAeN,CAACD,KAAD,CAfM,CAAT;AAmBA,QAAM,CAACU,IAAD,EAAOE,OAAP,IAAkBpB,QAAQ,CAAC,EAAD,CAAhC;AAKA;AAAA;;AAER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAM,MAAA,KAAK,EAAE;AAACuB,QAAAA,OAAO,EAAC;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAM,MAAA,KAAK,EAAE;AAACA,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC;AAA/B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMN,IAAI,CAACO,KAAL,KAAeP,IAAI,CAACQ,cAApB,gBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,GAAER,IAAI,CAACO,KAAM,KAAIP,IAAI,CAACQ,cAAe,GAA5C,CAArC,gBAA4F;AAAI,MAAA,KAAK,EAAE;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuCL,IAAI,CAACQ,cAA5C,CADlG,eAGI;AAAI,MAAA,KAAK,EAAE;AAACH,QAAAA,OAAO,EAAC,cAAT;AAAyBI,QAAAA,UAAU,EAAC;AAApC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0DT,IAAI,CAACU,YAA/D,MAHJ,CADJ,eAMC;AAAK,MAAA,GAAG,EAAG,kCAAiCV,IAAI,CAACW,WAAY,EAA7D;AAAgE,MAAA,GAAG,EAAC,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAND,eAQQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,CAFA,eAaA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACN,QAAAA,OAAO,EAAE,MAAV;AAAkBO,QAAAA,mBAAmB,EAAE;AAAvC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAI,MAAA,KAAK,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADL,eAEpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFoB,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFN,CADJ,eAII;AAAG,MAAA,KAAK,EAAE;AAACP,QAAAA,OAAO,EAAC;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCL,IAAI,CAACa,QAAL,KAAkB,EAAlB,GAAuB,cAAvB,GAAwCb,IAAI,CAACa,QAAlF,MAJJ,CAbA,CAFJ,eAwBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBJ,eA0BI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BJ;AApCJ;AAkEH;;AAKL,eAAexB,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Search from '../../components/Search'\nimport Header from '../../components/Header'\nimport '../../components/Search/Search.css'\nimport Movie_API from '../../api/Movie_API'\nimport '../styles.css'\nimport Logo from '../../components/TMDB-Image'\nimport Favorites from '../../components/Movies/Favorite'\n\n\n/*\nconst MovieInfo = () => {\n    \n    return(\n        <div>\n           <Header />\n           <Icon />\n           <div style={{textAlign:\"center\"}}>\n               jkjkjkjkj\n           </div>\n           <div style={{textAlign:\"center\", position:'relative', top:'100px'}}>\n               <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p>\n           </div>\n           <div style={{marginTop:\"550px\"}}>\n                <Search  />\n           </div>\n        </div>\n    )\n}\n*/\n\n\n\n     function MovieInfo({match}) {\n        useEffect(() => {\n            const fetchInfo = async () => {\n                const fetchInfo = await Movie_API.get(`/movie/${match.params.id}`,{\n                    params:{\n                        api_key: process.env.REACT_APP_API,\n                        language: 'en-US'\n                    }\n                });\n                const info = await fetchInfo.data\n        \n                setInfo(info)\n                window.scrollTo(0, 0)\n\n            };\n            fetchInfo();\n        }, [match]);\n        \n \n    \n        const [info, setInfo] = useState({});\n    \n       \n\n\n        return (\n          \n/*\n            <div>\n            <Header />\n            <div className=\"title\">\n                { info.title !== info.original_title ? <h2> {`${info.title} (${info.original_title})`}</h2> : <h2 style={{display:'inline-block'}}> {info.original_title}</h2>}\n                 <h2 style={{display:'inline-block', marginLeft:'10px'}}>({info.release_date})</h2>\n            </div>\n            <div style={{marginLeft:'20px'}}>\n                <div className=\"movie\">\n                    <img src={`https://image.tmdb.org/t/p/w185${info.poster_path}`} className=\"movie-img\" alt=\"Movie title\"/>\n                    <Favorites />\n                </div>\n                <span>\n                    <h3 style={{textAlign:'left' ,display:'inline-block', marginLeft:'100px'}}>Rating: {info.vote_average}/10</h3>\n                </span>\n                <div className=\"description\">\n                    <p style={{display:'inline-block'}}>{info.overview === \"\" ? \"No info here\" : info.overview } </p>\n                </div>\n           \n                \n            </div>\n            \n            <div style={{marginTop:\"550px\"}}>\n            <h2 style={{display: 'inline', position:'relative', bottom:'200px', left:'600px'}}>Continue Searching Below <span role=\"img\" aria-label=\"down\">⬇️</span> </h2>\n            \n                <Search  />\n            </div>\n\n            <Logo />\n            \n            </div>\n\n            */\n\n            <div>\n                <Header/>\n                <span style={{display:'flex'}}>\n\n                <span style={{display:'flex', flexDirection:'column'}}>\n                    <span>\n                        { info.title !== info.original_title ? <h2> {`${info.title} (${info.original_title})`}</h2> : <h2 style={{display:'inline-block'}}> {info.original_title}</h2>}\n                    \n                        <h2 style={{display:'inline-block', marginLeft:'10px'}}>({info.release_date})</h2>\n                     </span>\n                 <img src={`https://image.tmdb.org/t/p/w185${info.poster_path}`} alt=\"Movie Title\" />\n                 \n                        <Favorites />\n                    \n                </span>\n                <div className=\"description\">\n                    <div style={{display: 'grid', gridTemplateColumns: 'auto auto auto'}}>\n                         <h4 style=\"/*! width: 50%; */\">Rating: 7.4/10</h4>\n<h4>Voter Count: 2233</h4><h4>Runtime: 106 minutes</h4></div>\n                    <p style={{display:'inline-block'}}>{info.overview === \"\" ? \"No info here\" : info.overview } </p>\n                </div>\n\n                </span>\n\n                <Search />\n\n                <Logo />\n\n            </div>\n        )\n    }\n    \n\n\n\nexport default MovieInfo\n\n"]},"metadata":{},"sourceType":"module"}