{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/Pages/MovieInfo/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Search from \"../../components/Search\";\nimport Header from \"../../components/Header\";\nimport \"../../components/Search/Search.css\";\nimport Movie_API from \"../../api/Movie_API\";\nimport MovieList from \"../../components/Movies/MovieList\";\nimport \"../styles.css\";\nimport Logo from \"../../components/TMDB-Image\";\nimport Favorites from \"../../components/Movies/Favorite\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport MovieCard from \"../../components/Movies/MovieCard\";\n\nconst handleFavs = fav => {\n  const arr = [];\n  const index2 = arr.indexOf(...fav.movie);\n  fav.movie.map((index, key) => {\n    if (arr.includes(...fav.movie) || fav.clicked === true) {\n      arr.splice(index2, 1);\n    } else {\n      arr.push(...fav.movie);\n    }\n  });\n};\n\nfunction MovieInfo({\n  match\n}) {\n  const [list, getList] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      if (query === \"\") {\n        getList([]);\n      } else {\n        const KEY = process.env.REACT_APP_API;\n        const response = await Movie_API.get(\"/search/movie\", {\n          params: {\n            api_key: KEY,\n            language: \"en-US\",\n            include_adult: \"false\",\n            page: \"1\",\n            query: query\n          }\n        });\n        getList(response.data.results);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n\n  const onTermSubmit = async q => {\n    setQuery(q);\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const [movieInfo, castAndCrewInfo, recommendInfo] = await Promise.all([Movie_API.get(`/movie/${match.params.id}`, {\n        params: {\n          api_key: process.env.REACT_APP_API,\n          language: \"en-US\"\n        }\n      }), Movie_API.get(`/movie/${match.params.id}/credits`, {\n        params: {\n          api_key: process.env.REACT_APP_API\n        }\n      }), Movie_API.get(`/movie/${match.params.id}/recommendations`, {\n        params: {\n          api_key: process.env.REACT_APP_API\n        }\n      })]);\n      setInfo(movieInfo.data);\n      setCastInfo(castAndCrewInfo.data.cast);\n      setCrewInfo(castAndCrewInfo.data.crew);\n      setRecInfo(recommendInfo.data.results);\n      window.scrollTo(0, 0);\n    }\n\n    ;\n    getData();\n  }, [match]);\n  const [info, setInfo] = useState({});\n  const [castInfo, setCastInfo] = useState([]);\n  const [crewInfo, setCrewInfo] = useState([]);\n  const [recommendInfo, setRecInfo] = useState([]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieCard, {\n    image: `https://image.tmdb.org/t/p/w185${info.poster_path}`,\n    id: info.id,\n    title: info.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, info.title !== info.original_title ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \" \", `${info.title} [${info.original_title}]`) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \" \", info.original_title), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"(\", info.release_date, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"auto auto auto\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Rating: \", info.vote_average * 10, \"%\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Popularity: \", info.popularity), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Runtime: \", info.runtime, \" minutes\")), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, info.tagline !== \"\" ? info.tagline : null), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      display: \"inline-block\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \" \", info.overview === \"\" ? \"No info here\" : info.overview, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"0px\",\n      border: \"2px black solid\",\n      marginTop: \"3em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      overflowX: \"scroll\",\n      overflowY: \"hidden\",\n      marginTop: \"20px\",\n      marginBottom: \"90px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, castInfo.map((cast, key) => /*#__PURE__*/React.createElement(OverlayTrigger, {\n    key: key,\n    placement: \"bottom\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      key: key,\n      style: {\n        paddingTop: \"20px\",\n        textAlign: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, cast.character), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"(\", cast.name, \")\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100px\",\n      height: \"122px\",\n      marginRight: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    key: key,\n    alt: cast.name,\n    src: cast.profile_path === null ? \"https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg\" : `https://image.tmdb.org/t/p/w185${cast.profile_path}`,\n    style: {\n      borderRadius: \"100%\",\n      width: \"95px\",\n      height: \"113px\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      overflowX: \"scroll\",\n      overflowY: \"hidden\",\n      marginTop: \"20px\",\n      marginBottom: \"90px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, crewInfo.map((crew, key) => /*#__PURE__*/React.createElement(OverlayTrigger, {\n    key: key,\n    placement: \"bottom\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      key: key,\n      style: {\n        paddingTop: \"20px\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, crew.name, \" (\", crew.job, \")\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100px\",\n      height: \"122px\",\n      marginRight: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    key: key,\n    alt: crew.name,\n    src: crew.profile_path === null ? \"https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg\" : `https://image.tmdb.org/t/p/w185${crew.profile_path}`,\n    style: {\n      borderRadius: \"50%\",\n      width: \"95px\",\n      height: \"113px\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"0px\",\n      border: \"2px black solid\",\n      marginTop: \"3em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, \"Recommendations\"), /*#__PURE__*/React.createElement(MovieList, {\n    movies: recommendInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"0px\",\n      border: \"2px black solid\",\n      marginTop: \"3em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    onFormSubmit: onTermSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieList, {\n    movies: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/Pages/MovieInfo/index.js"],"names":["React","useState","useEffect","Search","Header","Movie_API","MovieList","Logo","Favorites","OverlayTrigger","Tooltip","MovieCard","handleFavs","fav","arr","index2","indexOf","movie","map","index","key","includes","clicked","splice","push","MovieInfo","match","list","getList","query","setQuery","fetchData","KEY","process","env","REACT_APP_API","response","get","params","api_key","language","include_adult","page","data","results","onTermSubmit","q","getData","movieInfo","castAndCrewInfo","recommendInfo","Promise","all","id","setInfo","setCastInfo","cast","setCrewInfo","crew","setRecInfo","window","scrollTo","info","castInfo","crewInfo","display","flexDirection","poster_path","title","original_title","marginLeft","release_date","gridTemplateColumns","marginTop","vote_average","popularity","runtime","border","tagline","padding","overview","width","height","overflowX","overflowY","marginBottom","paddingTop","textAlign","justifyContent","character","name","marginRight","profile_path","borderRadius","job"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Search from \"../../components/Search\";\nimport Header from \"../../components/Header\";\nimport \"../../components/Search/Search.css\";\nimport Movie_API from \"../../api/Movie_API\";\nimport MovieList from \"../../components/Movies/MovieList\";\nimport \"../styles.css\";\nimport Logo from \"../../components/TMDB-Image\";\nimport Favorites from \"../../components/Movies/Favorite\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport MovieCard from \"../../components/Movies/MovieCard\";\n\nconst handleFavs = (fav) => {\n  const arr = []\n  const index2 = arr.indexOf(...fav.movie)\n\n\n    fav.movie.map((index, key) => {\n      if(arr.includes(...fav.movie) || fav.clicked === true){\n        arr.splice(index2, 1)\n      }else{\n        arr.push(...fav.movie)\n      }\n    })\n  }\n\nfunction MovieInfo({ match }) {\n  const [list, getList] = useState([])\n  const [query, setQuery] = useState(\"\")\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if(query === \"\"){\n        getList([])\n      }else{\n      const KEY = process.env.REACT_APP_API;\n      const response = await Movie_API.get(\"/search/movie\", {\n        params: {\n          api_key: KEY,\n          language: \"en-US\",\n          include_adult: \"false\",\n          page: \"1\",\n          query: query,\n        },\n      });\n      getList(response.data.results)\n    }\n      \n    }\n    fetchData();\n  }, [query])\n\n\n  const onTermSubmit = async (q) => {\n      setQuery(q)\n     \n  };\n\n\n  useEffect (() => {\n    async function getData() {\n      const [movieInfo, castAndCrewInfo, recommendInfo] = await Promise.all(\n        [\n          Movie_API.get(`/movie/${match.params.id}`, {\n            params: {\n              api_key: process.env.REACT_APP_API,\n              language: \"en-US\",\n            },\n          }),\n\n          Movie_API.get(`/movie/${match.params.id}/credits`, {\n              params: {\n                api_key: process.env.REACT_APP_API,\n              },\n            }),\n\n            Movie_API.get(\n              `/movie/${match.params.id}/recommendations`,{\n                params: {\n                  api_key: process.env.REACT_APP_API,\n                },\n              })\n         ]\n    )\n\n    setInfo(movieInfo.data)\n    setCastInfo(castAndCrewInfo.data.cast)\n    setCrewInfo(castAndCrewInfo.data.crew)\n    setRecInfo(recommendInfo.data.results)\n\n    window.scrollTo(0, 0);\n\n    };\n    getData();\n  },[match])\n\n \n\n  const [info, setInfo] = useState({});\n  const [castInfo, setCastInfo] = useState([]);\n  const [crewInfo, setCrewInfo] = useState([]);\n  const [recommendInfo, setRecInfo] = useState([]);\n\n\n\n  return (\n    \n    <>\n      <Header />\n      <span className=\"info\">\n        <span style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <span className=\"title\"></span>\n          <MovieCard\n              image={`https://image.tmdb.org/t/p/w185${info.poster_path}`}\n              id={info.id}\n              title={info.title}/>\n              \n          \n\n        </span>\n        <div className=\"description\">\n          <span className=\"title\">\n            {info.title !== info.original_title ? (\n              <h2> {`${info.title} [${info.original_title}]`}</h2>\n            ) : (\n              <h2> {info.original_title}</h2>\n            )}\n\n            <h2 style={{ marginLeft: \"10px\" }}>({info.release_date})</h2>\n          </span>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"auto auto auto\",\n              marginTop: \"10px\",\n            }}\n          >\n            <h4>Rating: {info.vote_average * 10}%</h4>\n            <h4>Popularity: {info.popularity}</h4>\n            <h4>Runtime: {info.runtime} minutes</h4>\n          </div>\n          <h3 style={{ border: \"none\" }}>\n            {info.tagline !== \"\" ? info.tagline : null}\n          </h3>\n          <p style={{ display: \"inline-block\", padding: \"20px\" }}>\n            {\" \"}\n            {info.overview === \"\" ? \"No info here\" : info.overview}{\" \"}\n          </p>\n        </div>\n      </span>\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"0px\",\n          border: \"2px black solid\",\n          marginTop: \"3em\",\n        }}\n      ></div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          overflowX: \"scroll\",\n          overflowY: \"hidden\",\n          marginTop: \"20px\",\n          marginBottom: \"90px\",\n        }}\n      >\n        {castInfo.map((cast, key) => (\n          <OverlayTrigger\n            key={key}\n            placement=\"bottom\"\n            overlay={\n              <Tooltip\n                key={key}\n                style={{\n                  paddingTop: \"20px\",\n                  textAlign: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <div>{cast.character}</div>\n                <div>({cast.name})</div>\n              </Tooltip>\n            }\n          >\n            <div\n              style={{ width: \"100px\", height: \"122px\", marginRight: \"50px\" }}\n            >\n              <img\n                key={key}\n                alt={cast.name}\n                src={\n                  cast.profile_path === null\n                    ? \"https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg\"\n                    : `https://image.tmdb.org/t/p/w185${cast.profile_path}`\n                }\n                style={{\n                  borderRadius: \"100%\",\n                  width: \"95px\",\n                  height: \"113px\",\n                  padding: \"5px\",\n                }}\n              />\n            </div>\n          </OverlayTrigger>\n        ))}\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          overflowX: \"scroll\",\n          overflowY: \"hidden\",\n          marginTop: \"20px\",\n          marginBottom: \"90px\",\n        }}\n      >\n        {crewInfo.map((crew, key) => (\n          <OverlayTrigger\n            key={key}\n            placement=\"bottom\"\n            overlay={\n              <Tooltip\n                key={key}\n                style={{ paddingTop: \"20px\", textAlign: \"center\" }}\n              >\n                {crew.name} ({crew.job})\n              </Tooltip>\n            }\n          >\n            <div\n              style={{ width: \"100px\", height: \"122px\", marginRight: \"50px\" }}\n            >\n              <img\n                key={key}\n                alt={crew.name}\n                src={\n                  crew.profile_path === null\n                    ? \"https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg\"\n                    : `https://image.tmdb.org/t/p/w185${crew.profile_path}`\n                }\n                style={{\n                  borderRadius: \"50%\",\n                  width: \"95px\",\n                  height: \"113px\",\n                  padding: \"5px\",\n                }}\n              />\n            </div>\n          </OverlayTrigger>\n        ))}\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"0px\",\n          border: \"2px black solid\",\n          marginTop: \"3em\",\n        }}\n      ></div>\n\n      <div style={{ textAlign: \"center\" }}>\n        <h3>Recommendations</h3>\n        <MovieList movies={recommendInfo} />\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"0px\",\n          border: \"2px black solid\",\n          marginTop: \"3em\",\n        }}\n      ></div>\n\n      <Search onFormSubmit={onTermSubmit}/>\n      <MovieList movies={list} />\n\n      <Logo />\n    </>\n  );\n}\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}