{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js\";\nimport React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from \"./Favorite\";\nimport { withFirebase } from \"../firebase\";\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || [];\nlet newID;\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: false,\n      favoriteList: []\n    };\n\n    this.handleFavs = props => {\n      const found = this.state.favoriteList.some(el => el.id === props.movie[0].id);\n\n      if (!found) {\n        this.setState({\n          favorite: true\n        }); //arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n\n        if (!this.props.firebase.auth.currentUser.isAnonymous) {\n          newID.push({\n            id: props.movie[0].id,\n            title: props.movie[0].title,\n            poster_path: props.movie[0].poster_path,\n            favorite: true,\n            release_date: props.movie[0].release_date\n          });\n        }\n      } else {\n        this.setState({\n          favorite: false\n        });\n        newID.once(\"value\", snap => {\n          snap.forEach(child => {\n            if (props.movie[0].id === child.val().id) {\n              this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"));\n            }\n          });\n        });\n      }\n      /*\n      if(arr.includes(...props.movie)){\n      const fav = arr.indexOf(...props.movie)\n      arr.splice(fav, 1)\n      localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n      }else{\n      props.movie.map((index, key) => {\n          arr.push(...props.movie)\n          this.setState({\n            favorites: arr\n          })\n        }\n      )\n      }\n      */\n\n    };\n  }\n\n  componentDidMount() {\n    newID = this.props.firebase.item(this.props.userID);\n    newID.on(\"value\", snap => {\n      let array = [];\n      snap.forEach(child => {\n        array.push({\n          id: child.val().id,\n          title: child.val().title,\n          poster_path: child.val().poster_path,\n          favorite: true,\n          release_date: child.val().release_date\n        });\n      });\n      this.setState({\n        favoriteList: array\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" movie-info\"\n      /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/info/${this.props.id}/${encodeURIComponent(this.props.title)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Favorite, {\n      key: this.props.id,\n      id: this.props.id,\n      title: this.props.title,\n      release_date: this.props.release_date,\n      img: this.props.image,\n      handleFav: this.handleFavs,\n      isLoggedIn: this.props.isLoggedIn,\n      userID: this.props.userID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withFirebase(MovieCard);","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js"],"names":["React","Link","Favorite","withFirebase","arr","JSON","parse","localStorage","getItem","newID","MovieCard","Component","state","favorite","favoriteList","handleFavs","props","found","some","el","id","movie","setState","firebase","auth","currentUser","isAnonymous","push","title","poster_path","release_date","once","snap","forEach","child","val","childItems","key","userID","then","console","log","componentDidMount","item","on","array","render","encodeURIComponent","image","width","isLoggedIn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from \"./Favorite\";\nimport { withFirebase } from \"../firebase\";\n\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || [];\nlet newID;\n\nclass MovieCard extends React.Component {\n  state = {\n    favorite: false,\n    favoriteList: [],\n  };\n\n  componentDidMount() {\n    newID = this.props.firebase.item(this.props.userID);\n\n    newID.on(\"value\", (snap) => {\n      let array = [];\n      snap.forEach((child) => {\n        array.push({\n          id: child.val().id,\n          title: child.val().title,\n          poster_path: child.val().poster_path,\n          favorite: true,\n          release_date: child.val().release_date,\n        });\n      });\n\n      this.setState({ favoriteList: array });\n    });\n  }\n\n  handleFavs = (props) => {\n    const found = this.state.favoriteList.some(\n      (el) => el.id === props.movie[0].id\n    );\n\n    if (!found) {\n      this.setState({\n        favorite: true,\n      });\n\n      //arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n      if (!this.props.firebase.auth.currentUser.isAnonymous) {\n        newID.push({\n          id: props.movie[0].id,\n          title: props.movie[0].title,\n          poster_path: props.movie[0].poster_path,\n          favorite: true,\n          release_date: props.movie[0].release_date,\n        });\n      }\n    } else {\n      this.setState({\n        favorite: false,\n      });\n\n      newID.once(\"value\", (snap) => {\n        snap.forEach((child) => {\n          if (props.movie[0].id === child.val().id) {\n            this.props.firebase\n              .childItems(child.key, this.props.userID)\n              .then(() => console.log(\"remove successful\"));\n          }\n        });\n      });\n    }\n    /*\n  if(arr.includes(...props.movie)){\n    const fav = arr.indexOf(...props.movie)\n    arr.splice(fav, 1)\n    localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n  }else{\n    props.movie.map((index, key) => {\n        arr.push(...props.movie)\n        this.setState({\n          favorites: arr\n        })\n      }\n    )\n  }\n  */\n  };\n\n  render() {\n    return (\n      <div className=\"movie-list\">\n        <div\n          className=\" movie-info\" /*style={{display:'flex',flexDirection:'column-reverse'}} */\n        >\n          <Link\n            to={`/info/${this.props.id}/${encodeURIComponent(\n              this.props.title\n            )}`}\n          >\n            <img src={this.props.image} style={{ width: \"100%\" }} alt=\"Movie\" />\n          </Link>\n        </div>\n        <Favorite\n          key={this.props.id}\n          id={this.props.id}\n          title={this.props.title}\n          release_date={this.props.release_date}\n          img={this.props.image}\n          handleFav={this.handleFavs}\n          isLoggedIn={this.props.isLoggedIn}\n          userID={this.props.userID}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(MovieCard);\n"]},"metadata":{},"sourceType":"module"}