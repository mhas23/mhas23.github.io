{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/Pages/Filter/index.js\";\nimport React, { useState } from \"react\";\nimport MovieList from \"../../components/Movies/MovieList\";\nimport \"../../components/Search/Search.css\";\nimport { Movie_API } from \"../../api/Movie_API\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nlet response;\nconst sort = [{\n  name: \"popularity.desc\",\n  title: \"Descending Popularity\",\n  id: 1\n}, {\n  name: \"popularity.asc\",\n  title: \"Ascending Popularity\",\n  id: 2\n}, {\n  name: \"release_date.desc\",\n  title: \"Ascending Release Date\",\n  id: 3\n}, {\n  name: \"release_date.desc\",\n  title: \"Descending Release Date\",\n  id: 4\n}, {\n  name: \"revenue.asc\",\n  title: \"Ascending Revenue\",\n  id: 5\n}, {\n  name: \"revenue.desc\",\n  title: \"Descending Revenue\",\n  id: 6\n}, {\n  name: \"original_title.desc\",\n  title: \"Descending Title\",\n  id: 7\n}, {\n  name: \"original_title.asc\",\n  title: \"Ascending Title\",\n  id: 8\n}, {\n  name: \"vote_average.asc\",\n  title: \"Ascending Rating\",\n  id: 9\n}, {\n  name: \"vote_average.desc\",\n  title: \"Descending Rating\",\n  id: 10\n}];\nconst genre = [{\n  name: \"Action\",\n  id: 28\n}, {\n  name: \"Adventure\",\n  id: 12\n}, {\n  name: \"Animation\",\n  id: 16\n}, {\n  name: \"Comedy\",\n  id: 35\n}, {\n  name: \"Crime\",\n  id: 80\n}, {\n  name: \"Documentary\",\n  id: 99\n}, {\n  name: \"Drama\",\n  id: 18\n}, {\n  name: \"Family\",\n  id: 10751\n}, {\n  name: \"Fantasy\",\n  id: 14\n}, {\n  name: \"History\",\n  id: 36\n}, {\n  name: \"Horror\",\n  id: 27\n}, {\n  name: \"Music\",\n  id: 10402\n}, {\n  name: \"Mystery\",\n  id: 9648\n}, {\n  name: \"Romance\",\n  id: 10749\n}, {\n  name: \"Science Fiction\",\n  id: 878\n}, {\n  name: \"TV Movie\",\n  id: 10770\n}, {\n  name: \"Thriller\",\n  id: 53\n}, {\n  name: \"War\",\n  id: 10752\n}, {\n  name: \"Western\",\n  id: 37\n}];\nlet getID = 0;\n\nfunction Filter() {\n  const [checked, setChecked] = useState({});\n  const [id, setID] = useState([]);\n  const [list, setList] = useState([]);\n  const [select, setSelection] = useState(sort[0].name);\n  const [startDate, setStartDate] = useState(new Date());\n  const [page, setPage] = useState(1);\n\n  const handleClick = async event => {\n    setChecked({\n      [event.target.id]: [event.target.checked]\n    });\n\n    if (event.target.checked === true) {\n      setID(id.concat(event.target.id));\n    } else {\n      let index = id.indexOf(event.target.id);\n\n      if (index > -1) {\n        id.splice(index, 1);\n      }\n    } //setList(response.data.results)\n\n  };\n\n  const handleSelection = async event => {\n    setSelection(event.target.value);\n  };\n\n  const handlePage = () => {\n    setPage(page + 1);\n  };\n\n  const getAllID = () => {\n    getID = id.toString();\n\n    if (getID === \"\") {\n      console.log('select a genre');\n    } else {\n      return getID;\n    }\n  };\n\n  const onTermSubmit = async e => {\n    const KEY = process.env.REACT_APP_API;\n    e.preventDefault();\n    console.log(getAllID);\n    response = await Movie_API.Search.get(\"/discover/movie\", {\n      params: {\n        api_key: KEY,\n        language: \"en-US\",\n        include_adult: \"false\",\n        page: page,\n        with_genres: getAllID(),\n        primary_release_year: startDate.getFullYear(),\n        sort_by: select\n      }\n    });\n    setPage(1);\n    setList(response.data.results);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-flex\",\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onTermSubmit,\n    style: {\n      display: \"inline-flex\",\n      flexDirection: \"column\",\n      alignSelf: \"flex-start\",\n      position: \"sticky\",\n      top: \"0\",\n      border: \"4px solid black\",\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, \"Search using these filters\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, \"\\u2B07\\uFE0F\")), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, \"Select Genre: \"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-grid\",\n      gridTemplateColumns: \"auto auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, genre.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    key: key,\n    style: {\n      display: \"block\",\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, item.name, /*#__PURE__*/React.createElement(\"input\", {\n    key: key,\n    type: \"checkbox\",\n    name: item.name,\n    id: item.id,\n    checked: checked[item.checked],\n    onChange: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, \"Select sorting order:\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"sort\",\n    id: \"sort_type\",\n    onChange: handleSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, sort.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n    key: key,\n    value: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }, item.title))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, \"Enter Year\"), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    showYearPicker: true,\n    dateFormat: \"yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, \"Enter Here!\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MovieList, {\n    movies: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/Pages/Filter/index.js"],"names":["React","useState","MovieList","Movie_API","DatePicker","response","sort","name","title","id","genre","getID","Filter","checked","setChecked","setID","list","setList","select","setSelection","startDate","setStartDate","Date","page","setPage","handleClick","event","target","concat","index","indexOf","splice","handleSelection","value","handlePage","getAllID","toString","console","log","onTermSubmit","e","KEY","process","env","REACT_APP_API","preventDefault","Search","get","params","api_key","language","include_adult","with_genres","primary_release_year","getFullYear","sort_by","data","results","display","flexDirection","alignSelf","position","top","border","padding","gridTemplateColumns","map","item","key","margin","date"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport MovieList from \"../../components/Movies/MovieList\";\nimport \"../../components/Search/Search.css\";\nimport { Movie_API } from \"../../api/Movie_API\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nlet response;\n\nconst sort = [\n  {\n    name: \"popularity.desc\",\n    title: \"Descending Popularity\",\n    id: 1,\n  },\n\n  {\n    name: \"popularity.asc\",\n    title: \"Ascending Popularity\",\n    id: 2,\n  },\n\n  {\n    name: \"release_date.desc\",\n    title: \"Ascending Release Date\",\n    id: 3,\n  },\n\n  {\n    name: \"release_date.desc\",\n    title: \"Descending Release Date\",\n    id: 4,\n  },\n\n  {\n    name: \"revenue.asc\",\n    title: \"Ascending Revenue\",\n    id: 5,\n  },\n\n  {\n    name: \"revenue.desc\",\n    title: \"Descending Revenue\",\n    id: 6,\n  },\n\n  {\n    name: \"original_title.desc\",\n    title: \"Descending Title\",\n    id: 7,\n  },\n\n  {\n    name: \"original_title.asc\",\n    title: \"Ascending Title\",\n    id: 8,\n  },\n\n  {\n    name: \"vote_average.asc\",\n    title: \"Ascending Rating\",\n    id: 9,\n  },\n\n  {\n    name: \"vote_average.desc\",\n    title: \"Descending Rating\",\n    id: 10,\n  },\n];\n\nconst genre = [\n  {\n    name: \"Action\",\n    id: 28,\n  },\n  {\n    name: \"Adventure\",\n    id: 12,\n  },\n\n  {\n    name: \"Animation\",\n    id: 16,\n  },\n\n  {\n    name: \"Comedy\",\n    id: 35,\n  },\n  {\n    name: \"Crime\",\n    id: 80,\n  },\n\n  {\n    name: \"Documentary\",\n    id: 99,\n  },\n  {\n    name: \"Drama\",\n    id: 18,\n  },\n  {\n    name: \"Family\",\n    id: 10751,\n  },\n\n  {\n    name: \"Fantasy\",\n    id: 14,\n  },\n\n  {\n    name: \"History\",\n    id: 36,\n  },\n\n  {\n    name: \"Horror\",\n    id: 27,\n  },\n\n  {\n    name: \"Music\",\n    id: 10402,\n  },\n\n  {\n    name: \"Mystery\",\n    id: 9648,\n  },\n\n  {\n    name: \"Romance\",\n    id: 10749,\n  },\n\n  {\n    name: \"Science Fiction\",\n    id: 878,\n  },\n\n  {\n    name: \"TV Movie\",\n    id: 10770,\n  },\n  {\n    name: \"Thriller\",\n    id: 53,\n  },\n  {\n    name: \"War\",\n    id: 10752,\n  },\n  {\n    name: \"Western\",\n    id: 37,\n  },\n];\n\nlet getID = 0\n\nfunction Filter() {\n  const [checked, setChecked] = useState({});\n  const [id, setID] = useState([]);\n  const [list, setList] = useState([]);\n  const [select, setSelection] = useState(sort[0].name);\n  const [startDate, setStartDate] = useState(new Date());\n  const [page, setPage] = useState(1)\n\n  const handleClick = async (event) => {\n    setChecked({ [event.target.id]: [event.target.checked] });\n    if (event.target.checked === true) {\n      setID(id.concat(event.target.id));\n    } else {\n      let index = id.indexOf(event.target.id);\n      if (index > -1) {\n        id.splice(index, 1);\n      }\n    }\n\n    //setList(response.data.results)\n  };\n\n  const handleSelection = async (event) => {\n    setSelection(event.target.value);\n  \n  };\n\n  const handlePage = () => {\n    setPage(page + 1)\n  }\n\n  const getAllID = () => {\n     getID = id.toString()\n    if(getID === \"\"){\n      console.log('select a genre')\n    }else{\n    return getID\n    }\n  }\n\n  const onTermSubmit = async (e) => {\n    const KEY = process.env.REACT_APP_API;\n    e.preventDefault();\n\n    console.log(getAllID)\n\n    response = await Movie_API.Search.get(\"/discover/movie\", {\n      params: {\n        api_key: KEY,\n        language: \"en-US\",\n        include_adult: \"false\",\n        page: page,\n        with_genres: getAllID(),\n        primary_release_year: startDate.getFullYear(),\n        sort_by: select,\n      },\n    });\n\n    setPage(1)\n\n    setList(response.data.results);\n  \n    \n  };\n\n  return (\n    <div>\n      <div style={{ display: \"inline-flex\", flexDirection: \"row\" }}>\n        <form\n          onSubmit={onTermSubmit}\n          style={{\n            display: \"inline-flex\",\n            flexDirection: \"column\",\n            alignSelf: \"flex-start\",\n            position: \"sticky\",\n            top: \"0\",\n            border: \"4px solid black\",\n            padding: \"10px\",\n          }}\n        >\n          <div>\n            Search using these filters{\" \"}\n            <span role=\"img\" aria-label=\"down\">\n              ⬇️\n            </span>\n          </div>\n          <h4>Select Genre: </h4>\n          <div\n            style={{ display: \"inline-grid\", gridTemplateColumns: \"auto auto\" }}\n          >\n            {genre.map((item, key) => (\n              <div key={key}>\n                <label key={key} style={{ display: \"block\", margin: \"10px\" }}>\n                  {item.name}\n                  <input\n                    key={key}\n                    type=\"checkbox\"\n                    name={item.name}\n                    id={item.id}\n                    checked={checked[item.checked]}\n                    onChange={handleClick}\n                  />\n                </label>\n              </div>\n            ))}\n          </div>\n\n          <h4>Select sorting order:</h4>\n\n          <select name=\"sort\" id=\"sort_type\" onChange={handleSelection}>\n            {sort.map((item, key) => (\n              <option key={key} value={item.name}>\n                {item.title}\n              </option>\n            ))}\n          </select>\n\n          <h4>Enter Year</h4>\n          <DatePicker\n            selected={startDate}\n            onChange={(date) => setStartDate(date)}\n            showYearPicker\n            dateFormat=\"yyyy\"\n          />\n          <button type=\"submit\">Enter Here!</button>\n        </form>\n        <div style={{ padding: \"30px\" }}>\n          <MovieList movies={list} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}