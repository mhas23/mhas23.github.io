{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/Pages/MovieInfo/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Search from \"../../components/Search\";\nimport Header from \"../../components/Header\";\nimport \"../../components/Search/Search.css\";\nimport Movie_API from \"../../api/Movie_API\";\nimport MovieList from \"../../components/Movies/MovieList\";\nimport \"../styles.css\";\nimport Logo from \"../../components/TMDB-Image\";\nimport Favorites from \"../../components/Movies/Favorite\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport MovieCard from \"../../components/Movies/MovieCard\";\n\nfunction MovieInfo({\n  match\n}) {\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const fetchInfo = await Movie_API.get(`/movie/${match.params.id}`, {\n        params: {\n          api_key: process.env.REACT_APP_API,\n          language: \"en-US\"\n        }\n      });\n      setInfo(fetchInfo.data);\n      window.scrollTo(0, 0);\n    };\n\n    fetchInfo();\n  }, [match]);\n  useEffect(() => {\n    const fetchCastAndCrew = async () => {\n      const fetchCastAndCrew = await Movie_API.get(`/movie/${match.params.id}/credits`, {\n        params: {\n          api_key: process.env.REACT_APP_API\n        }\n      });\n      const castInfo = await fetchCastAndCrew.data.cast;\n      const crewInfo = await fetchCastAndCrew.data.crew;\n      setCastInfo(castInfo);\n      setCrewInfo(crewInfo);\n      window.scrollTo(0, 0);\n    };\n\n    fetchCastAndCrew();\n  }, [match]);\n  useEffect(() => {\n    const fetchRecommend = async () => {\n      const fetchRecommend = await Movie_API.get(`/movie/${match.params.id}/recommendations`, {\n        params: {\n          api_key: process.env.REACT_APP_API\n        }\n      });\n      const recommendInfo = await fetchRecommend.data.results;\n      setRecInfo(recommendInfo);\n      window.scrollTo(0, 0);\n    };\n\n    fetchRecommend();\n  }, [match]);\n  const [info, setInfo] = useState([]);\n  const [castInfo, setCastInfo] = useState([]);\n  const [crewInfo, setCrewInfo] = useState([]);\n  const [recommendInfo, setRecInfo] = useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MovieCard, {\n    image: `https://image.tmdb.org/t/p/w185${info.poster_path}`,\n    id: info.id,\n    title: info.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), console.log(info)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, info.title !== info.original_title ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \" \", `${info.title} [${info.original_title}]`) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \" \", info.original_title), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"(\", info.release_date, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"auto auto auto\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Rating: \", info.vote_average * 10, \"%\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Popularity: \", info.popularity), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Runtime: \", info.runtime, \" minutes\")), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, info.tagline !== \"\" ? info.tagline : null), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      display: \"inline-block\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \" \", info.overview === \"\" ? \"No info here\" : info.overview, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"0px\",\n      border: \"2px black solid\",\n      marginTop: \"3em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      overflowX: \"scroll\",\n      overflowY: \"hidden\",\n      marginTop: \"20px\",\n      marginBottom: \"90px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, castInfo.map((cast, key) => /*#__PURE__*/React.createElement(OverlayTrigger, {\n    key: key,\n    placement: \"bottom\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      key: key,\n      style: {\n        paddingTop: \"20px\",\n        textAlign: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, cast.character, \"(\", cast.name, \")\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100px\",\n      height: \"122px\",\n      marginRight: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    key: key,\n    alt: cast.name,\n    src: cast.profile_path === null ? \"https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg\" : `https://image.tmdb.org/t/p/w185${cast.profile_path}`,\n    style: {\n      borderRadius: \"100%\",\n      width: \"95px\",\n      height: \"113px\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      overflowX: \"scroll\",\n      overflowY: \"hidden\",\n      marginTop: \"20px\",\n      marginBottom: \"90px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, crewInfo.map((crew, key) => /*#__PURE__*/React.createElement(OverlayTrigger, {\n    key: key,\n    placement: \"bottom\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      key: key,\n      style: {\n        paddingTop: \"20px\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, crew.name, \" (\", crew.job, \")\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100px\",\n      height: \"122px\",\n      marginRight: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    key: key,\n    alt: crew.name,\n    src: crew.profile_path === null ? \"https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg\" : `https://image.tmdb.org/t/p/w185${crew.profile_path}`,\n    style: {\n      borderRadius: \"50%\",\n      width: \"95px\",\n      height: \"113px\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"0px\",\n      border: \"2px black solid\",\n      marginTop: \"3em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, \"Recommendations\"), /*#__PURE__*/React.createElement(MovieList, {\n    movies: recommendInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"0px\",\n      border: \"2px black solid\",\n      marginTop: \"3em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/Pages/MovieInfo/index.js"],"names":["React","useState","useEffect","Search","Header","Movie_API","MovieList","Logo","Favorites","OverlayTrigger","Tooltip","MovieCard","MovieInfo","match","fetchInfo","get","params","id","api_key","process","env","REACT_APP_API","language","setInfo","data","window","scrollTo","fetchCastAndCrew","castInfo","cast","crewInfo","crew","setCastInfo","setCrewInfo","fetchRecommend","recommendInfo","results","setRecInfo","info","display","flexDirection","poster_path","title","console","log","original_title","marginLeft","release_date","gridTemplateColumns","marginTop","vote_average","popularity","runtime","border","tagline","padding","overview","width","height","overflowX","overflowY","marginBottom","map","key","paddingTop","textAlign","justifyContent","character","name","marginRight","profile_path","borderRadius","job"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Search from \"../../components/Search\";\nimport Header from \"../../components/Header\";\nimport \"../../components/Search/Search.css\";\nimport Movie_API from \"../../api/Movie_API\";\nimport MovieList from \"../../components/Movies/MovieList\";\nimport \"../styles.css\";\nimport Logo from \"../../components/TMDB-Image\";\nimport Favorites from \"../../components/Movies/Favorite\";\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport MovieCard from \"../../components/Movies/MovieCard\";\n\nfunction MovieInfo({ match }) {\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const fetchInfo = await Movie_API.get(`/movie/${match.params.id}`, {\n        params: {\n          api_key: process.env.REACT_APP_API,\n          language: \"en-US\",\n        },\n      });\n\n      \n\n      setInfo(fetchInfo.data);\n      window.scrollTo(0, 0);\n    };\n    fetchInfo();\n  }, [match]);\n\n  useEffect(() => {\n    const fetchCastAndCrew = async () => {\n      const fetchCastAndCrew = await Movie_API.get(\n        `/movie/${match.params.id}/credits`,\n        {\n          params: {\n            api_key: process.env.REACT_APP_API,\n          },\n        }\n      );\n\n      const castInfo = await fetchCastAndCrew.data.cast;\n      const crewInfo = await fetchCastAndCrew.data.crew;\n\n      setCastInfo(castInfo);\n      setCrewInfo(crewInfo);\n\n      window.scrollTo(0, 0);\n    };\n    fetchCastAndCrew();\n  }, [match]);\n\n  useEffect(() => {\n    const fetchRecommend = async () => {\n      const fetchRecommend = await Movie_API.get(`/movie/${match.params.id}/recommendations`,{\n          params: {\n            api_key: process.env.REACT_APP_API,\n          },\n        }\n      );\n\n      const recommendInfo = await fetchRecommend.data.results;\n\n      setRecInfo(recommendInfo);\n      window.scrollTo(0, 0);\n    };\n    fetchRecommend();\n  }, [match]);\n\n  const [info, setInfo] = useState([]);\n  const [castInfo, setCastInfo] = useState([]);\n  const [crewInfo, setCrewInfo] = useState([]);\n  const [recommendInfo, setRecInfo] = useState([]);\n\n  return (\n    <div>\n      <Header />\n      <span className=\"info\">\n        <span style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <span className=\"title\"></span>\n          <MovieCard\n            image={`https://image.tmdb.org/t/p/w185${info.poster_path}`}\n            id={info.id}\n            title={info.title}\n          />\n\n          {console.log(info)}\n\n        </span>\n        <div className=\"description\">\n          <span className=\"title\">\n            {info.title !== info.original_title ? (\n              <h2> {`${info.title} [${info.original_title}]`}</h2>\n            ) : (\n              <h2> {info.original_title}</h2>\n            )}\n\n            <h2 style={{ marginLeft: \"10px\" }}>({info.release_date})</h2>\n          </span>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"auto auto auto\",\n              marginTop: \"10px\",\n            }}\n          >\n            <h4>Rating: {info.vote_average * 10}%</h4>\n            <h4>Popularity: {info.popularity}</h4>\n            <h4>Runtime: {info.runtime} minutes</h4>\n          </div>\n          <h3 style={{ border: \"none\" }}>\n            {info.tagline !== \"\" ? info.tagline : null}\n          </h3>\n          <p style={{ display: \"inline-block\", padding: \"20px\" }}>\n            {\" \"}\n            {info.overview === \"\" ? \"No info here\" : info.overview}{\" \"}\n          </p>\n        </div>\n      </span>\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"0px\",\n          border: \"2px black solid\",\n          marginTop: \"3em\",\n        }}\n      ></div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          overflowX: \"scroll\",\n          overflowY: \"hidden\",\n          marginTop: \"20px\",\n          marginBottom: \"90px\",\n        }}\n      >\n        {castInfo.map((cast, key) => (\n          <OverlayTrigger\n            key={key}\n            placement=\"bottom\"\n            overlay={\n              <Tooltip\n                key={key}\n                style={{\n                  paddingTop: \"20px\",\n                  textAlign: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {cast.character}({cast.name})\n              </Tooltip>\n            }\n          >\n            <div\n              style={{ width: \"100px\", height: \"122px\", marginRight: \"50px\" }}\n            >\n              <img\n                key={key}\n                alt={cast.name}\n                src={\n                  cast.profile_path === null\n                    ? \"https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg\"\n                    : `https://image.tmdb.org/t/p/w185${cast.profile_path}`\n                }\n                style={{\n                  borderRadius: \"100%\",\n                  width: \"95px\",\n                  height: \"113px\",\n                  padding: \"5px\",\n                }}\n              />\n            </div>\n          </OverlayTrigger>\n        ))}\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          overflowX: \"scroll\",\n          overflowY: \"hidden\",\n          marginTop: \"20px\",\n          marginBottom: \"90px\",\n        }}\n      >\n        {crewInfo.map((crew, key) => (\n          <OverlayTrigger\n            key={key}\n            placement=\"bottom\"\n            overlay={\n              <Tooltip\n                key={key}\n                style={{ paddingTop: \"20px\", textAlign: \"center\" }}\n              >\n                {crew.name} ({crew.job})\n              </Tooltip>\n            }\n          >\n            <div\n              style={{ width: \"100px\", height: \"122px\", marginRight: \"50px\" }}\n            >\n              <img\n                key={key}\n                alt={crew.name}\n                src={\n                  crew.profile_path === null\n                    ? \"https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg\"\n                    : `https://image.tmdb.org/t/p/w185${crew.profile_path}`\n                }\n                style={{\n                  borderRadius: \"50%\",\n                  width: \"95px\",\n                  height: \"113px\",\n                  padding: \"5px\",\n                }}\n              />\n            </div>\n          </OverlayTrigger>\n        ))}\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"0px\",\n          border: \"2px black solid\",\n          marginTop: \"3em\",\n        }}\n      ></div>\n\n      <div style={{ textAlign: \"center\" }}>\n        <h3>Recommendations</h3>\n        <MovieList movies={recommendInfo} />\n      </div>\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"0px\",\n          border: \"2px black solid\",\n          marginTop: \"3em\",\n        }}\n      ></div>\n\n      <Search />\n\n      <Logo />\n    </div>\n  );\n}\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}