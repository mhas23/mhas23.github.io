{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport Favorite from \"./Favorite\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst MovieList = ({\n  movies\n}) => {\n  const [movie, setMovie] = useState([]);\n\n  const handleClick = () => {\n    let addArray = true;\n    array.map((item, key) => {\n      if (item === props.id) {\n        array.splice(key, 1);\n        addArray = false;\n      }\n    });\n\n    if (addArray) {\n      array.push(props.id);\n    }\n\n    setMovie([...array]);\n  };\n\n  if (movies.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \"No results\");\n  } else {\n    const renderedList = movies.filter(movie => movie.poster_path !== null).map((movie, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        style: {\n          display: \"inline-flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MovieCard, {\n        image: `https://image.tmdb.org/t/p/w185${movie.poster_path}`,\n        id: movie.id,\n        title: movie.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-rendered-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, renderedList));\n  }\n};\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js"],"names":["React","useState","useEffect","MovieCard","Favorite","ClipLoader","MovieList","movies","movie","setMovie","handleClick","addArray","array","map","item","key","props","id","splice","push","length","textAlign","renderedList","filter","poster_path","display","flexDirection","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,WAAW,GAAG,MAAM;AAGtB,QAAIC,QAAQ,GAAG,IAAf;AACAC,IAAAA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAMC,GAAN,KAAc;AACtB,UAAGD,IAAI,KAAKE,KAAK,CAACC,EAAlB,EAAqB;AACnBL,QAAAA,KAAK,CAACM,MAAN,CAAaH,GAAb,EAAiB,CAAjB;AACAJ,QAAAA,QAAQ,GAAG,KAAX;AACD;AACF,KALD;;AAOA,QAAGA,QAAH,EAAY;AACVC,MAAAA,KAAK,CAACO,IAAN,CAAWH,KAAK,CAACC,EAAjB;AACD;;AACDR,IAAAA,QAAQ,CAAC,CAAC,GAAGG,KAAJ,CAAD,CAAR;AACH,GAfD;;AAkBA,MAAIL,MAAM,CAACa,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBAAO;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFD,MAEO;AACL,UAAMC,YAAY,GAAGf,MAAM,CACxBgB,MADkB,CACVf,KAAD,IAAWA,KAAK,CAACgB,WAAN,KAAsB,IADtB,EAElBX,GAFkB,CAEd,CAACL,KAAD,EAAQO,GAAR,KAAgB;AACnB,0BACE;AACE,QAAA,GAAG,EAAEA,GADP;AAEE,QAAA,KAAK,EAAE;AAAEU,UAAAA,OAAO,EAAE,aAAX;AAA0BC,UAAAA,aAAa,EAAE;AAAzC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAG,kCAAiClB,KAAK,CAACgB,WAAY,EAD7D;AAEE,QAAA,EAAE,EAAEhB,KAAK,CAACS,EAFZ;AAGE,QAAA,KAAK,EAAET,KAAK,CAACmB,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAgBD,KAnBkB,CAArB;AAqBA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCC,YAAtC,CADF,CADF;AAKD;AACF,CAnDD;;AAqDA,eAAehB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport Favorite from \"./Favorite\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nconst MovieList = ({ movies }) => {\n  const [movie, setMovie] = useState([])\n\n  const handleClick = () => {\n   \n      \n      let addArray = true;\n      array.map((item,key) => {\n        if(item === props.id){\n          array.splice(key,1)\n          addArray = false\n        }\n      })\n\n      if(addArray){\n        array.push(props.id)\n      }\n      setMovie([...array])\n  }\n \n  \n  if (movies.length === 0) {\n    return <h3 style={{ textAlign: \"center\" }}>No results</h3>;\n  } else {\n    const renderedList = movies\n      .filter((movie) => movie.poster_path !== null)\n      .map((movie, key) => {\n        return (\n          <div\n            key={key}\n            style={{ display: \"inline-flex\", flexDirection: \"column\" }}\n          >\n            <MovieCard\n              image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n              id={movie.id}\n              title={movie.title}\n            />\n            \n           \n           \n            \n          </div>\n        );\n      });\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div className=\"movie-rendered-list\">{renderedList}</div>\n      </div>\n    );\n  }\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}