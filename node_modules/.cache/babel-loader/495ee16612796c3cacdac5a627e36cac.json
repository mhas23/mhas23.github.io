{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Movies.scss\";\nimport MovieCard from \"./MovieCard\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst MovieList = ({\n  movies,\n  isLoggedIn,\n  userID\n}) => {\n  const [loading, setLoading] = useState(true);\n  let renderedList;\n  let cards = [];\n\n  const getNewCards = (key, movie) => {\n    for (let i = 0; i < 2; i++) {\n      cards.push( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(MovieCard, {\n        image: `https://image.tmdb.org/t/p/w185${movie.poster_path}`,\n        id: movie.id,\n        title: movie.title,\n        release_date: movie.release_date,\n        isLoggedIn: isLoggedIn,\n        userID: userID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }))));\n    }\n\n    return cards;\n  };\n\n  useEffect(() => {\n    let time = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => {\n      clearTimeout(time);\n      setLoading(true);\n    };\n  }, [movies]);\n\n  if (movies.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"No results\"), \" \");\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ClipLoader, {\n      size: 150,\n      color: \"#123abc\",\n      css: `\n          display: block;\n          margin: 0 auto;\n          border-color: black;\n        `,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    });\n  } else {\n    renderedList = movies.filter((movie, key) => {\n      if (movie.poster_path !== null) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, getNewCards(key, movie));\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-rendered-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, renderedList));\n};\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js"],"names":["React","useState","useEffect","MovieCard","ClipLoader","MovieList","movies","isLoggedIn","userID","loading","setLoading","renderedList","cards","getNewCards","key","movie","i","push","poster_path","id","title","release_date","time","setTimeout","clearTimeout","length","display","justifyContent","filter","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA;AAAtB,CAAD,KAAoC;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAIU,YAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACxBJ,MAAAA,KAAK,CAACK,IAAN,eAAW,uDACV;AACK,QAAA,GAAG,EAAEH,GADV;AAEK,QAAA,SAAS,EAAC,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIK,oBAAC,SAAD;AACE,QAAA,KAAK,EAAG,kCAAiCC,KAAK,CAACG,WAAY,EAD7D;AAEE,QAAA,EAAE,EAAEH,KAAK,CAACI,EAFZ;AAGE,QAAA,KAAK,EAAEJ,KAAK,CAACK,KAHf;AAIE,QAAA,YAAY,EAAEL,KAAK,CAACM,YAJtB;AAKE,QAAA,UAAU,EAAEd,UALd;AAME,QAAA,MAAM,EAAEC,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJL,CADU,CAAX;AAeD;;AACD,WAAOI,KAAP;AACD,GAnBD;;AAqBAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,IAAI,GAAGC,UAAU,CAAC,MAAM;AAC1Bb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFoB,EAElB,IAFkB,CAArB;AAIA,WAAO,MAAM;AACXc,MAAAA,YAAY,CAACF,IAAD,CAAZ;AACAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAHD;AAID,GATQ,EASN,CAACJ,MAAD,CATM,CAAT;;AAWA,MAAIA,MAAM,CAACmB,MAAP,KAAkB,CAAtB,EAAyB;AACvB,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EACsB,GADtB,CADF;AAKD;;AAED,MAAIlB,OAAJ,EAAa;AACX,wBACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,GADR;AAEE,MAAA,KAAK,EAAE,SAFT;AAGE,MAAA,GAAG,EAAG;;;;SAHR;AAQE,MAAA,OAAO,EAAEA,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD,GAbD,MAaO;AACLE,IAAAA,YAAY,GAAGL,MAAM,CAClBsB,MADY,CACL,CAACb,KAAD,EAASD,GAAT,KAAiB;AACtB,UAAIC,KAAK,CAACG,WAAN,KAAsB,IAA1B,EAA+B;AAC/B,4BACC,0CACCL,WAAW,CAACC,GAAD,EAAMC,KAAN,CADZ,CADD;AAKC;AAAC,KARQ,CAAf;AAQS;;AAIX,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsClB,YAAtC,CADF,CADF;AAKD,CA5ED;;AA8EA,eAAeN,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Movies.scss\";\nimport MovieCard from \"./MovieCard\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst MovieList = ({ movies, isLoggedIn, userID }) => {\n  const [loading, setLoading] = useState(true);\n  let renderedList;\n  let cards = []\n\n  const getNewCards = (key, movie) => {\n    for(let i = 0; i < 2; i++){\n      cards.push(<> \n       <div\n            key={key}\n            className=\"movie-list\"\n          >\n            <MovieCard\n              image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n              id={movie.id}\n              title={movie.title}\n              release_date={movie.release_date}\n              isLoggedIn={isLoggedIn}\n              userID={userID}\n            />\n          </div>\n      </>)\n    }\n    return cards\n  }\n\n  useEffect(() => {\n    let time = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n    return () => {\n      clearTimeout(time);\n      setLoading(true);\n    };\n  }, [movies]);\n\n  if (movies.length === 0) {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h4>No results</h4>{\" \"}\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <ClipLoader\n        size={150}\n        color={\"#123abc\"}\n        css={`\n          display: block;\n          margin: 0 auto;\n          border-color: black;\n        `}\n        loading={loading}\n      ></ClipLoader>\n    );\n  } else {\n    renderedList = movies\n      .filter((movie , key) => {\n         if (movie.poster_path !== null){\n         return (\n          <>\n          {getNewCards(key, movie)}\n          </>\n        );\n         }})}\n     \n      \n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div className=\"movie-rendered-list\">{renderedList}</div>\n    </div>\n  );\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}