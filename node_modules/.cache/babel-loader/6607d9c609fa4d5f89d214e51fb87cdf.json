{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js\";\nimport React from \"react\";\nimport \"./Movies.scss\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite';\nimport { withFirebase } from '../firebase';\nlet newID;\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: false,\n      favoriteList: []\n    };\n\n    this.handleFavs = props => {\n      const found = this.state.favoriteList.some(el => el.id === props.movie[0].id);\n\n      if (!found) {\n        this.setState({\n          favorite: true\n        }); //arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n\n        if (!this.props.firebase.auth.currentUser.isAnonymous) {\n          newID.push({\n            id: props.movie[0].id,\n            title: props.movie[0].title,\n            poster_path: props.movie[0].poster_path,\n            favorite: true,\n            release_date: props.movie[0].release_date\n          });\n        }\n      } else {\n        if (window.confirm(\"Are you sure you want to remove from Favorites?\")) this.setState({\n          favorite: false\n        });\n        newID.once(\"value\", snap => {\n          snap.forEach(child => {\n            if (props.movie[0].id === child.val().id) {\n              this.props.firebase.childItems(child.key, this.props.userID);\n            }\n          });\n        });\n      }\n      /*\n      if(arr.includes(...props.movie)){\n        const fav = arr.indexOf(...props.movie)\n        arr.splice(fav, 1)\n        localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n      }else{\n        props.movie.map((index, key) => {\n            arr.push(...props.movie)\n            this.setState({\n              favorites: arr\n            })\n          }\n        )\n      }\n      */\n\n    };\n  }\n\n  componentDidMount() {\n    this.mount = true;\n    newID = this.props.firebase.item(this.props.userID);\n    newID.on(\"value\", snap => {\n      let array = [];\n      snap.forEach(child => {\n        array.push({\n          id: child.val().id,\n          title: child.val().title,\n          poster_path: child.val().poster_path,\n          favorite: true,\n          release_date: child.val().release_date\n        });\n      });\n\n      if (this.mount) {\n        this.setState({\n          favoriteList: array\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mount = false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" movie-info\"\n      /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/info/${this.props.id}/${encodeURIComponent(this.props.title)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Favorite, {\n      key: this.props.id,\n      id: this.props.id,\n      title: this.props.title,\n      release_date: this.props.release_date,\n      img: this.props.image,\n      handleFav: this.handleFavs,\n      isLoggedIn: this.props.isLoggedIn,\n      userID: this.props.userID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\n;\nexport default withFirebase(MovieCard);","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js"],"names":["React","Link","Favorite","withFirebase","newID","MovieCard","Component","state","favorite","favoriteList","handleFavs","props","found","some","el","id","movie","setState","firebase","auth","currentUser","isAnonymous","push","title","poster_path","release_date","window","confirm","once","snap","forEach","child","val","childItems","key","userID","componentDidMount","mount","item","on","array","componentWillUnmount","render","encodeURIComponent","image","width","isLoggedIn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Movies.scss\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite'\nimport {withFirebase} from '../firebase'\n\nlet newID\n\n\nclass MovieCard extends React.Component {\n\n  \n  state = {\n    favorite: false,\n    favoriteList: []\n  }\n\n  componentDidMount(){\n     this.mount = true\n  \n    newID  = this.props.firebase.item(this.props.userID)\n \n  newID.on(\"value\", snap => {\n     let array = []\n     snap.forEach((child) => {\n          array.push({id: child.val().id, title: child.val().title, poster_path: child.val().poster_path, favorite: true, release_date: child.val().release_date})\n     })\n     if(this.mount){\n    this.setState({favoriteList: array})\n     }\n\n  })\n}\n\n \n\n componentWillUnmount(){\n  this.mount = false\n }\n\n  \nhandleFavs = (props) => {\n  \n  const found = this.state.favoriteList.some(el => el.id === props.movie[0].id)\n  \n    if (!found){\n      this.setState({\n        favorite: true\n      })\n      \n      //arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n      if(!this.props.firebase.auth.currentUser.isAnonymous){\n      newID.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n\n    }\n  }\n  else{\n\n    if(window.confirm(\"Are you sure you want to remove from Favorites?\"))\n\n      this.setState({\n        favorite: false\n      })\n    \n      newID.once(\"value\", snap => {\n      snap.forEach(child => {\n        if(props.movie[0].id === child.val().id){\n          this.props.firebase.childItems(child.key, this.props.userID)\n        }\n      })\n    })\n\n\n  }\n  /*\n  if(arr.includes(...props.movie)){\n    const fav = arr.indexOf(...props.movie)\n    arr.splice(fav, 1)\n    localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n  }else{\n    props.movie.map((index, key) => {\n        arr.push(...props.movie)\n        this.setState({\n          favorites: arr\n        })\n      }\n    )\n  }\n  */\n\n\n}\n\n\n\n\n\nrender(){\n  \n  \n\n  return (\n    <>\n      \n      <div\n        className=\" movie-info\" /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      >\n        <Link to={`/info/${this.props.id}/${encodeURIComponent(this.props.title)}`}>\n          <img src={this.props.image} style={{ width: \"100%\" }} alt=\"Movie\" />\n            \n        </Link>\n      </div>  \n         <Favorite key={this.props.id} id={this.props.id} title={this.props.title} release_date={this.props.release_date} img={this.props.image} handleFav={this.handleFavs} isLoggedIn={this.props.isLoggedIn} userID={this.props.userID}/>\n    </>\n  );\n}\n};\n\nexport default withFirebase(MovieCard);\n"]},"metadata":{},"sourceType":"module"}