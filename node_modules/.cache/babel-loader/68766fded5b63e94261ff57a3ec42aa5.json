{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport Favorite from \"./Favorite\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst MovieList = ({\n  movies\n}) => {\n  let ls = window.localStorage;\n  const [favorite, setFavorite] = useState(JSON.parse(ls.getItem(\"fav\")) || [{\n    movies: [],\n    clicked: false\n  }]);\n  useEffect(() => {\n    ls.setItem(\"fav\", JSON.stringify(favorite));\n  });\n  const arr = [];\n  const arr2 = [];\n  let myVal = ls.getItem(\"fav\");\n\n  const handleFavs = fav => {\n    if (favorite.includes(...fav.movie)) {\n      const favorites = favorite.indexOf(...fav.movie);\n      favorite.splice(favorites, 1);\n      console.log(3);\n    } else {\n      const index2 = arr.indexOf(...fav.movie);\n      fav.movie.map((index, key) => {\n        if (arr.includes(...fav.movie) || fav.clicked === true) {\n          arr.splice(index2, 1);\n        } else {\n          arr.push(...fav.movie);\n        }\n      });\n    }\n\n    setFavorite(arr.concat(...favorite));\n    console.log(favorite);\n  };\n\n  if (movies.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 66\n      }\n    }, \"No results\"), \" \");\n  }\n\n  const renderedList = movies.filter(movie => movie.poster_path !== null).map((movie, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      style: {\n        display: \"inline-flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MovieCard, {\n      image: `https://image.tmdb.org/t/p/w185${movie.poster_path}`,\n      id: movie.id,\n      title: movie.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Favorite, {\n      key: movie.id,\n      id: movie.id,\n      handleFav: handleFavs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    })));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-rendered-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, renderedList), console.log(JSON.parse(ls.getItem(\"fav\"))));\n};\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js"],"names":["React","useState","useEffect","MovieCard","Favorite","ClipLoader","MovieList","movies","ls","window","localStorage","favorite","setFavorite","JSON","parse","getItem","clicked","setItem","stringify","arr","arr2","myVal","handleFavs","fav","includes","movie","favorites","indexOf","splice","console","log","index2","map","index","key","push","concat","length","display","justifyContent","renderedList","filter","poster_path","flexDirection","id","title","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport Favorite from \"./Favorite\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nconst MovieList = ({movies}) => {\n  let ls = window.localStorage\n\n  const [favorite, setFavorite] = useState(JSON.parse(ls.getItem(\"fav\")) || [{movies: [], clicked:false}])\n  \n  useEffect(() => {\n    ls.setItem(\"fav\", JSON.stringify(favorite))\n  })\n\n  const arr = []\n  const arr2 = []\n  let myVal = ls.getItem(\"fav\")\n\n  const handleFavs = (fav) => {\n    if(favorite.includes(...fav.movie)){\n      const favorites = favorite.indexOf(...fav.movie)\n      favorite.splice(favorites, 1)\n      console.log(3)\n    }else{\n    const index2 = arr.indexOf(...fav.movie)\n\n      fav.movie.map((index, key) => {\n        if(arr.includes(...fav.movie) || fav.clicked === true){\n          arr.splice(index2, 1)\n        }else{\n          arr.push(...fav.movie)\n        }\n      })\n    }\n\n      setFavorite(arr.concat(...favorite))\n\n      console.log(favorite)\n\n     \n    \n    \n   \n      \n}\n\n  \n if(movies.length === 0){\n   return(<div style={{display:'flex', justifyContent:'center'}}><h4>No results</h4> </div>)\n }\n    const renderedList = movies\n      .filter((movie) => movie.poster_path !== null)\n      .map((movie, key) => {\n       \n        return (\n          <div\n            key={key}\n            style={{ display: \"inline-flex\", flexDirection: \"column\" }}\n          >\n            <MovieCard\n              image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n              id={movie.id}\n              title={movie.title}\n              \n            >\n              <Favorite key={movie.id} id={movie.id} handleFav={handleFavs}/>\n            </MovieCard>\n            \n           \n           \n           \n            \n          </div>\n        );\n      });\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div className=\"movie-rendered-list\">{renderedList}</div>\n       {console.log(JSON.parse(ls.getItem(\"fav\")))}\n      </div>\n    );\n  }\n\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}