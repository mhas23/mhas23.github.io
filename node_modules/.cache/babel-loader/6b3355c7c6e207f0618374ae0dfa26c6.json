{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/Pages/Filter/index.js\";\nimport React, { useState } from \"react\";\nimport MovieList from \"../../components/Movies/MovieList\";\nimport \"../../components/Search/Search.css\";\nimport { Movie_API } from \"../../api/Movie_API\";\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\nlet response;\nconst sort = [{\n  name: 'popularity.desc',\n  title: 'Descending Popularity',\n  id: 1\n}, {\n  name: 'popularity.asc',\n  title: 'Ascending Popularity',\n  id: 2\n}, {\n  name: 'release_date.desc',\n  title: 'Ascending Release Date',\n  id: 3\n}, {\n  name: 'release_date.desc',\n  title: 'Descending Release Date',\n  id: 4\n}, {\n  name: 'revenue.asc',\n  title: 'Ascending Revenue',\n  id: 5\n}, {\n  name: 'revenue.desc',\n  title: 'Descending Revenue',\n  id: 6\n}, {\n  name: 'original_title.desc',\n  title: 'Descending Title',\n  id: 7\n}, {\n  name: 'original_title.asc',\n  title: 'Ascending Title',\n  id: 8\n}, {\n  name: 'vote_average.asc',\n  title: 'Ascending Rating',\n  id: 9\n}, {\n  name: 'vote_average.desc',\n  title: 'Descending Rating',\n  id: 10\n}];\nconst genre = [{\n  name: \"Action\",\n  id: 28\n}, {\n  name: \"Adventure\",\n  id: 12\n}, {\n  name: \"Animation\",\n  id: 16\n}, {\n  name: \"Comedy\",\n  id: 35\n}, {\n  name: \"Crime\",\n  id: 80\n}, {\n  name: \"Documentary\",\n  id: 99\n}, {\n  name: \"Drama\",\n  id: 18\n}, {\n  name: \"Family\",\n  id: 10751\n}, {\n  name: \"Fantasy\",\n  id: 14\n}, {\n  name: \"History\",\n  id: 36\n}, {\n  name: \"Horror\",\n  id: 27\n}, {\n  name: \"Music\",\n  id: 10402\n}, {\n  name: \"Mystery\",\n  id: 9648\n}, {\n  name: \"Romance\",\n  id: 10749\n}, {\n  name: \"Science Fiction\",\n  id: 878\n}, {\n  name: \"TV Movie\",\n  id: 10770\n}, {\n  name: \"Thriller\",\n  id: 53\n}, {\n  name: \"War\",\n  id: 10752\n}, {\n  name: \"Western\",\n  id: 37\n}];\n\nfunction Filter() {\n  const [checked, setChecked] = useState({});\n  const [id, setID] = useState([]);\n  const [list, setList] = useState([]);\n  const [select, setSelection] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n\n  const handleClick = async event => {\n    setChecked({\n      [event.target.id]: [event.target.checked]\n    });\n\n    if (event.target.checked === true) {\n      setID(id.concat(event.target.id));\n    } else {\n      let index = id.indexOf(event.target.id);\n\n      if (index > -1) {\n        id.splice(index, 1);\n      }\n    } //setList(response.data.results)\n\n  };\n\n  const handleSelection = async event => {\n    setSelection(event.target.value);\n  };\n\n  const onTermSubmit = async e => {\n    const KEY = process.env.REACT_APP_API;\n    let getAllID = id.toString();\n    e.preventDefault();\n    response = await Movie_API.Search.get(\"/discover/movie\", {\n      params: {\n        api_key: KEY,\n        language: \"en-US\",\n        include_adult: \"false\",\n        page: \"1\",\n        with_genres: getAllID,\n        primary_release_year: startDate.getFullYear(),\n        sort_by\n      }\n    });\n    setList(response.data.results);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, \"Search using these filters\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, \"\\u2B07\\uFE0F\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onTermSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, genre.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n    key: key,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    key: key,\n    style: {\n      display: \"block\",\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, item.name, /*#__PURE__*/React.createElement(\"input\", {\n    key: key,\n    type: \"checkbox\",\n    name: item.name,\n    id: item.id,\n    checked: checked[item.checked],\n    onChange: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"sort\",\n    id: \"sort_type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, sort.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n    value: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, item.title))), /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    showYearPicker: true,\n    dateFormat: \"yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Enter Here!\")), /*#__PURE__*/React.createElement(MovieList, {\n    movies: list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }), console.log(startDate.getFullYear())));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/Pages/Filter/index.js"],"names":["React","useState","MovieList","Movie_API","DatePicker","response","sort","name","title","id","genre","Filter","checked","setChecked","setID","list","setList","select","setSelection","startDate","setStartDate","Date","handleClick","event","target","concat","index","indexOf","splice","handleSelection","value","onTermSubmit","e","KEY","process","env","REACT_APP_API","getAllID","toString","preventDefault","Search","get","params","api_key","language","include_adult","page","with_genres","primary_release_year","getFullYear","sort_by","data","results","textAlign","map","item","key","display","margin","date","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport MovieList from \"../../components/Movies/MovieList\";\nimport \"../../components/Search/Search.css\";\nimport {Movie_API} from \"../../api/Movie_API\";\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\nlet response;\n\nconst sort = [\n  {\n    name: 'popularity.desc',\n    title: 'Descending Popularity',\n    id: 1\n  },\n\n  {\n    name: 'popularity.asc',\n    title: 'Ascending Popularity',\n    id: 2\n  },\n\n  {\n    name: 'release_date.desc',\n    title: 'Ascending Release Date',\n    id: 3\n  },\n\n  {\n    name: 'release_date.desc',\n    title: 'Descending Release Date',\n    id: 4\n  },\n\n  {\n    name: 'revenue.asc',\n    title: 'Ascending Revenue',\n    id: 5\n  },\n\n  {\n    name: 'revenue.desc',\n    title: 'Descending Revenue',\n    id: 6\n  },\n\n  {\n    name: 'original_title.desc',\n    title: 'Descending Title',\n    id: 7\n  },\n\n  {\n    name: 'original_title.asc',\n    title: 'Ascending Title',\n    id: 8\n  },\n\n  {\n    name: 'vote_average.asc',\n    title: 'Ascending Rating',\n    id: 9\n  },\n\n  {\n    name: 'vote_average.desc',\n    title: 'Descending Rating',\n    id: 10\n  }\n\n]\n\n\n\nconst genre = [\n  {\n    name: \"Action\",\n    id: 28,\n  },\n  {\n    name: \"Adventure\",\n    id: 12,\n  },\n\n  {\n    name: \"Animation\",\n    id: 16,\n  },\n\n  {\n    name: \"Comedy\",\n    id: 35,\n  },\n  {\n    name: \"Crime\",\n    id: 80,\n  },\n\n  {\n    name: \"Documentary\",\n    id: 99,\n  },\n  {\n    name: \"Drama\",\n    id: 18,\n  },\n  {\n    name: \"Family\",\n    id: 10751,\n  },\n\n  {\n    name: \"Fantasy\",\n    id: 14,\n  },\n\n  {\n    name: \"History\",\n    id: 36,\n  },\n\n  {\n    name: \"Horror\",\n    id: 27,\n  },\n\n  {\n    name: \"Music\",\n    id: 10402,\n  },\n\n  {\n    name: \"Mystery\",\n    id: 9648,\n  },\n\n  {\n    name: \"Romance\",\n    id: 10749,\n  },\n\n  {\n    name: \"Science Fiction\",\n    id: 878,\n  },\n\n  {\n    name: \"TV Movie\",\n    id: 10770,\n  },\n  {\n    name: \"Thriller\",\n    id: 53,\n  },\n  {\n    name: \"War\",\n    id: 10752,\n  },\n  {\n    name: \"Western\",\n    id: 37,\n  },\n];\n\nfunction Filter() {\n  const [checked, setChecked] = useState({});\n  const [id, setID] = useState([]);\n  const [list, setList] = useState([]);\n  const [select, setSelection] = useState(false)\n  const [startDate, setStartDate] = useState(new Date())\n\n  const handleClick = async (event) => {\n    setChecked({ [event.target.id]: [event.target.checked] });\n    if (event.target.checked === true) {\n      setID(id.concat(event.target.id));\n    } else {\n      let index = id.indexOf(event.target.id);\n      if (index > -1) {\n        id.splice(index, 1);\n      }\n    }\n\n    //setList(response.data.results)\n  };\n\n  const handleSelection = async (event) => {\n      setSelection(event.target.value)\n  }\n\n\n\n  const onTermSubmit = async (e) => {\n    const KEY = process.env.REACT_APP_API;\n\n    let getAllID = id.toString();\n\n    e.preventDefault();\n    response = await Movie_API.Search.get(\"/discover/movie\", {\n      params: {\n        api_key: KEY,\n        language: \"en-US\",\n        include_adult: \"false\",\n        page: \"1\",\n        with_genres: getAllID,\n        primary_release_year: startDate.getFullYear(),\n        sort_by\n      },\n    });\n\n    setList(response.data.results);\n  };\n\n  return (\n    <div>\n      <div style={{ textAlign: \"center\" }}>\n        Search using these filters{\" \"}\n        <span role=\"img\" aria-label=\"down\">\n          ⬇️\n        </span>\n      </div>\n      <div>\n        <form onSubmit={onTermSubmit}>\n          {genre.map((item, key) => (\n            <div key={key} style={{ display: \"inline-block\" }}>\n              <label key={key} style={{ display: \"block\", margin: \"10px\" }}>\n                {item.name}\n                <input\n                  key={key}\n                  type=\"checkbox\"\n                  name={item.name}\n                  id={item.id}\n                  checked={checked[item.checked]}\n                  onChange={handleClick}\n                />\n              </label>\n            </div>\n          ))}\n\n           \n                <select name=\"sort\" id=\"sort_type\">\n                {sort.map((item, key) => (\n                   \n                <option value={item.name}>{item.title}</option>\n                  ))}\n                </select>\n             \n        \n\n          <DatePicker selected={startDate} onChange={date => setStartDate(date)} showYearPicker dateFormat=\"yyyy\"/>\n          <button type=\"submit\">Enter Here!</button>\n        </form>\n\n\n        <MovieList movies={list} />\n        {console.log(startDate.getFullYear())}\n      </div>\n\n    </div>\n  );\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}