{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js\";\nimport React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite';\nimport { withFirebase } from '../firebase';\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || [];\nlet newID;\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: false,\n      favoriteList: []\n    };\n\n    this.handleFavs = props => {\n      newID = this.props.firebase.item(this.props.userID);\n      newID.on(\"value\", snap => {\n        let array = [];\n        snap.forEach(child => {\n          array.push({\n            id: child.val().id,\n            title: child.val().title,\n            poster_path: child.val().poster_path,\n            favorite: true,\n            release_date: child.val().release_date\n          });\n        });\n        this.setState({\n          favoriteList: array\n        });\n      });\n      console.log(this.state.favoriteList);\n      const found = this.state.favoriteList.some(el => el.id === props.movie[0].id);\n\n      if (!found) {\n        this.setState({\n          favorite: true\n        }); //arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n\n        if (!this.props.firebase.auth.currentUser.isAnonymous) {\n          newID.push({\n            id: props.movie[0].id,\n            title: props.movie[0].title,\n            poster_path: props.movie[0].poster_path,\n            favorite: true,\n            release_date: props.movie[0].release_date\n          });\n        }\n      } else {\n        this.setState({\n          favorite: false\n        });\n        newID.once(\"value\", snap => {\n          snap.forEach(child => {\n            if (props.movie[0].id === child.val().id) {\n              this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"));\n            }\n          });\n        });\n      }\n      /*\n      if(arr.includes(...props.movie)){\n        const fav = arr.indexOf(...props.movie)\n        arr.splice(fav, 1)\n        localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n      }else{\n        props.movie.map((index, key) => {\n            arr.push(...props.movie)\n            this.setState({\n              favorites: arr\n            })\n          }\n        )\n      }\n      */\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" movie-info\"\n      /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/info/${this.props.id}/${encodeURIComponent(this.props.title)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Favorite, {\n      key: this.props.id,\n      id: this.props.id,\n      title: this.props.title,\n      release_date: this.props.release_date,\n      img: this.props.image,\n      handleFav: this.handleFavs,\n      isLoggedIn: this.props.isLoggedIn,\n      userID: this.props.userID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\n;\nexport default withFirebase(MovieCard);","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js"],"names":["React","Link","Favorite","withFirebase","arr","JSON","parse","localStorage","getItem","newID","MovieCard","Component","state","favorite","favoriteList","handleFavs","props","firebase","item","userID","on","snap","array","forEach","child","push","id","val","title","poster_path","release_date","setState","console","log","found","some","el","movie","auth","currentUser","isAnonymous","once","childItems","key","then","render","encodeURIComponent","image","width","isLoggedIn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite'\nimport {withFirebase} from '../firebase'\n\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || []\nlet newID\n\n\nclass MovieCard extends React.Component {\n\n  \n  state = {\n    favorite: false,\n    favoriteList: []\n  }\n\n  \nhandleFavs = (props) => {\n  newID  = this.props.firebase.item(this.props.userID)\n \n  newID.on(\"value\", snap => {\n     let array = []\n     snap.forEach((child) => {\n      array.push({id: child.val().id, title: child.val().title, poster_path: child.val().poster_path, favorite: true, release_date: child.val().release_date})\n\n\n     })\n    \n    \n    this.setState({favoriteList: array})\n  })\n\n  console.log(this.state.favoriteList)\n\n \n\n  const found = this.state.favoriteList.some(el => el.id === props.movie[0].id)\n  \n  \n    if (!found){\n      this.setState({\n        favorite: true\n      })\n      \n      //arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n      if(!this.props.firebase.auth.currentUser.isAnonymous){\n      newID.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n\n    }\n  }\n  else{\n\n    this.setState({\n      favorite: false\n    })\n   \n    newID.once(\"value\", snap => {\n    snap.forEach(child => {\n      if(props.movie[0].id === child.val().id){\n        this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"))\n      }\n    })\n  })\n\n\n  }\n  /*\n  if(arr.includes(...props.movie)){\n    const fav = arr.indexOf(...props.movie)\n    arr.splice(fav, 1)\n    localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n  }else{\n    props.movie.map((index, key) => {\n        arr.push(...props.movie)\n        this.setState({\n          favorites: arr\n        })\n      }\n    )\n  }\n  */\n\n\n}\n\n\n\n\n\nrender(){\n\n  return (\n    <div className=\"movie-list\">\n      <div\n        className=\" movie-info\" /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      >\n        <Link to={`/info/${this.props.id}/${encodeURIComponent(this.props.title)}`}>\n          <img src={this.props.image} style={{ width: \"100%\" }} alt=\"Movie\" />\n            \n        </Link>\n      </div>  \n         <Favorite key={this.props.id} id={this.props.id} title={this.props.title} release_date={this.props.release_date} img={this.props.image} handleFav={this.handleFavs} isLoggedIn={this.props.isLoggedIn} userID={this.props.userID}/>\n    </div>\n  );\n}\n};\n\nexport default withFirebase(MovieCard);\n"]},"metadata":{},"sourceType":"module"}