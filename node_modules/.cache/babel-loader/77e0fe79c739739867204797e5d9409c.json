{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/Pages/FavoritesList/index.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { withAuthorization } from '../../session';\nimport { withFirebase } from '../../components/firebase';\nimport { compose } from 'recompose';\nimport MovieList from '../../components/Movies/MovieList';\nlet newArr = [];\nlet fil = [];\n\nclass FavoriteList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fil: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      fil: Array.from(new Set(newArr.map(i => i.id))).map(id => {\n        return newArr.find(a => a.id === id);\n      })\n    });\n  }\n\n  render() {\n    const date = moment(new Date()).format(\"YYYY-MM-DD\");\n    const ref = this.props.firebase.user(this.props.userID).child(\"favorites\").orderByKey();\n    ref.once(\"value\", snap => {\n      snap.forEach(child => {\n        if (child.exists()) {\n          this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"));\n        }\n      });\n    });\n    this.props.firebase.item(this.props.user).on(\"child_added\", snap => {\n      if (newArr.length === 0) {\n        newArr = [];\n      } else {\n        newArr = Array.from(new Set(newArr.map(i => i.id))).map(id => {\n          return newArr.find(a => a.id === id);\n        });\n      }\n\n      newArr.push({\n        id: snap.val().id,\n        title: snap.val().title,\n        release_date: snap.val().release_date,\n        poster_path: snap.val().poster_path\n      });\n    });\n    console.log(this.state.fil);\n    let list = JSON.parse(localStorage.getItem(\"favoriteList\"));\n    const soon = this.state.fil.filter(l => l.release_date > date);\n    const already_released = this.state.fil.filter(r => r.release_date < date);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"My Favorites\"), this.state.fil.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 44\n      }\n    }, \"Go back and add some favorites\") : /*#__PURE__*/React.createElement(React.Fragment, null, already_released.length !== 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 53\n      }\n    }, \"Past Releases\"), /*#__PURE__*/React.createElement(MovieList, {\n      movies: already_released,\n      isLoggedIn: this.props.loggedin,\n      userID: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), \" \") : null, soon.length !== 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 42\n      }\n    }, \"Future Releases\"), /*#__PURE__*/React.createElement(MovieList, {\n      movies: soon,\n      isLoggedIn: this.props.loggedin,\n      userID: this.props.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), \" \") : null));\n  }\n\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(withAuthorization(condition), withFirebase)(FavoriteList);","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/Pages/FavoritesList/index.js"],"names":["React","moment","withAuthorization","withFirebase","compose","MovieList","newArr","fil","FavoriteList","Component","constructor","props","state","componentDidMount","setState","Array","from","Set","map","i","id","find","a","render","date","Date","format","ref","firebase","user","userID","child","orderByKey","once","snap","forEach","exists","childItems","key","then","console","log","item","on","length","push","val","title","release_date","poster_path","list","JSON","parse","localStorage","getItem","soon","filter","l","already_released","r","loggedin","condition","authUser"],"mappings":"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","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport { withAuthorization } from '../../session'\nimport {withFirebase} from '../../components/firebase'\nimport {compose} from 'recompose'\nimport MovieList from '../../components/Movies/MovieList'\n\nlet newArr = []\nlet fil = []\n\n\nclass FavoriteList extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            fil: []\n        }\n    }\n\n    componentDidMount(){\n         this.setState({\n        fil: Array.from(new Set(newArr.map(i => i.id))).map(id => {return newArr.find(a => a.id === id)}) \n    })\n    }\n    \n\n\nrender(){\n    const date = moment(new Date()).format(\"YYYY-MM-DD\")\n\n    const ref = this.props.firebase.user(this.props.userID).child(\"favorites\").orderByKey()\n    ref.once(\"value\", snap => {\n    snap.forEach(child => {\n      if(child.exists()){\n        this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"))\n      }\n    })\n  })\n   \n\n    this.props.firebase.item(this.props.user).on(\"child_added\", snap => {\n        if(newArr.length === 0){\n            newArr = []\n        }else{\n            newArr = Array.from(new Set(newArr.map(i => i.id))).map(id => {return newArr.find(a => a.id === id)})\n        }\n        newArr.push({id: snap.val().id, title:snap.val().title, release_date: snap.val().release_date, poster_path:snap.val().poster_path})\n        \n    })\n   \n    console.log(this.state.fil)\n\n\n    \n    \n    let list = JSON.parse(localStorage.getItem(\"favoriteList\"))\n\n    const soon = this.state.fil.filter(l => l.release_date > date)\n    const already_released = this.state.fil.filter(r => r.release_date < date)\n\n    \n    return (\n        <div>\n           \n            \n            <h3>My Favorites</h3>\n            {this.state.fil.length === 0 ? <p>Go back and add some favorites</p> : \n                <>\n                {already_released.length !== 0 ? (<><h3>Past Releases</h3>\n                <MovieList movies={already_released} isLoggedIn={this.props.loggedin} userID={this.props.user}/> </>) : null}\n\n                 {soon.length !== 0 ? (<><h3>Future Releases</h3>\n                <MovieList movies={soon} isLoggedIn={this.props.loggedin} userID={this.props.user}/> </>) : null}   \n                \n                </>\n            }\n           \n        </div>\n    )\n        \n}\n}\n\n\nconst condition = authUser => !!authUser;\nexport default compose(\n    withAuthorization(condition),\n    withFirebase\n)(FavoriteList);"]},"metadata":{},"sourceType":"module"}