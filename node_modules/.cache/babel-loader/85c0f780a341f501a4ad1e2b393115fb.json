{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport Favorite from \"./Favorite\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst MovieList = ({\n  movies\n}) => {\n  const [favorite, setFavorite] = useState([]);\n  const arr = [];\n  const arr2 = [];\n\n  const handleFavs = fav => {\n    if (fav.clicked === true) {\n      arr.push(...fav.movie);\n    }\n\n    const index2 = arr.indexOf(...fav.movie);\n    fav.movie.map((index, key) => {\n      if (arr.includes(...fav.movie) || fav.clicked === true) {\n        arr.splice(index2, 1);\n      } else {\n        arr.push(...fav.movie);\n      }\n    });\n    setFavorite(arr.concat(...favorite));\n  };\n\n  if (movies.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 66\n      }\n    }, \"No results\"), \" \");\n  }\n\n  const renderedList = movies.filter(movie => movie.poster_path !== null).map((movie, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      style: {\n        display: \"inline-flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MovieCard, {\n      image: `https://image.tmdb.org/t/p/w185${movie.poster_path}`,\n      id: movie.id,\n      title: movie.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-rendered-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, renderedList));\n};\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js"],"names":["React","useState","useEffect","MovieCard","Favorite","ClipLoader","MovieList","movies","favorite","setFavorite","arr","arr2","handleFavs","fav","clicked","push","movie","index2","indexOf","map","index","key","includes","splice","concat","length","display","justifyContent","renderedList","filter","poster_path","flexDirection","id","title","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,GAAG,GAAG,EAAZ;AACA,QAAMC,IAAI,GAAG,EAAb;;AAEA,QAAMC,UAAU,GAAIC,GAAD,IAAS;AAC1B,QAAGA,GAAG,CAACC,OAAJ,KAAgB,IAAnB,EAAwB;AACtBJ,MAAAA,GAAG,CAACK,IAAJ,CAAS,GAAGF,GAAG,CAACG,KAAhB;AACD;;AACD,UAAMC,MAAM,GAAGP,GAAG,CAACQ,OAAJ,CAAY,GAAGL,GAAG,CAACG,KAAnB,CAAf;AAEEH,IAAAA,GAAG,CAACG,KAAJ,CAAUG,GAAV,CAAc,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5B,UAAGX,GAAG,CAACY,QAAJ,CAAa,GAAGT,GAAG,CAACG,KAApB,KAA8BH,GAAG,CAACC,OAAJ,KAAgB,IAAjD,EAAsD;AACpDJ,QAAAA,GAAG,CAACa,MAAJ,CAAWN,MAAX,EAAmB,CAAnB;AACD,OAFD,MAEK;AACHP,QAAAA,GAAG,CAACK,IAAJ,CAAS,GAAGF,GAAG,CAACG,KAAhB;AACD;AACF,KAND;AAQAP,IAAAA,WAAW,CAACC,GAAG,CAACc,MAAJ,CAAW,GAAGhB,QAAd,CAAD,CAAX;AAML,GApBC;;AAuBD,MAAGD,MAAM,CAACkB,MAAP,KAAkB,CAArB,EAAuB;AACrB,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,cAAc,EAAC;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvD,MAAP;AACD;;AACE,QAAMC,YAAY,GAAGrB,MAAM,CACxBsB,MADkB,CACVb,KAAD,IAAWA,KAAK,CAACc,WAAN,KAAsB,IADtB,EAElBX,GAFkB,CAEd,CAACH,KAAD,EAAQK,GAAR,KAAgB;AAEnB,wBACE;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE,aAAX;AAA0BK,QAAAA,aAAa,EAAE;AAAzC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAG,kCAAiCf,KAAK,CAACc,WAAY,EAD7D;AAEE,MAAA,EAAE,EAAEd,KAAK,CAACgB,EAFZ;AAGE,MAAA,KAAK,EAAEhB,KAAK,CAACiB,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAmBD,GAvBkB,CAArB;AAyBA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCN,YAAtC,CADF,CADF;AAKD,CA7DH;;AAgEA,eAAetB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport Favorite from \"./Favorite\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nconst MovieList = ({movies}) => {\n  const [favorite, setFavorite] = useState([])\n  const arr = []\n  const arr2 = []\n\n  const handleFavs = (fav) => {\n    if(fav.clicked === true){\n      arr.push(...fav.movie)\n    }\n    const index2 = arr.indexOf(...fav.movie)\n\n      fav.movie.map((index, key) => {\n        if(arr.includes(...fav.movie) || fav.clicked === true){\n          arr.splice(index2, 1)\n        }else{\n          arr.push(...fav.movie)\n        }\n      })\n\n      setFavorite(arr.concat(...favorite))\n     \n    \n    \n   \n      \n}\n\n  \n if(movies.length === 0){\n   return(<div style={{display:'flex', justifyContent:'center'}}><h4>No results</h4> </div>)\n }\n    const renderedList = movies\n      .filter((movie) => movie.poster_path !== null)\n      .map((movie, key) => {\n       \n        return (\n          <div\n            key={key}\n            style={{ display: \"inline-flex\", flexDirection: \"column\" }}\n          >\n            <MovieCard\n              image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n              id={movie.id}\n              title={movie.title}\n              \n            >\n            </MovieCard>\n            \n           \n           \n           \n            \n          </div>\n        );\n      });\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div className=\"movie-rendered-list\">{renderedList}</div>\n      </div>\n    );\n  }\n\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}