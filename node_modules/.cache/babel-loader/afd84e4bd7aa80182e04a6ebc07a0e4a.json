{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport Favorite from \"./Favorite\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst MovieList = ({\n  movies\n}) => {\n  const [favorite, setFavorite] = useState([]);\n  const arr = [];\n  const {\n    children\n  } = this.props;\n\n  if (movies.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 66\n      }\n    }, \"No results\"), \" \");\n  }\n\n  const renderedList = movies.filter(movie => movie.poster_path !== null).map((movie, key) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      style: {\n        display: \"inline-flex\",\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MovieCard, {\n      image: `https://image.tmdb.org/t/p/w185${movie.poster_path}`,\n      id: movie.id,\n      title: movie.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-rendered-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, renderedList));\n};\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js"],"names":["React","useState","useEffect","MovieCard","Favorite","ClipLoader","MovieList","movies","favorite","setFavorite","arr","children","props","length","display","justifyContent","renderedList","filter","movie","poster_path","map","key","flexDirection","id","title","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,GAAG,GAAG,EAAZ;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAa,KAAKC,KAAxB;;AAGD,MAAGL,MAAM,CAACM,MAAP,KAAkB,CAArB,EAAuB;AACrB,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,cAAc,EAAC;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvD,MAAP;AACD;;AACE,QAAMC,YAAY,GAAGT,MAAM,CACxBU,MADkB,CACVC,KAAD,IAAWA,KAAK,CAACC,WAAN,KAAsB,IADtB,EAElBC,GAFkB,CAEd,CAACF,KAAD,EAAQG,GAAR,KAAgB;AAEnB,wBACE;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,KAAK,EAAE;AAAEP,QAAAA,OAAO,EAAE,aAAX;AAA0BQ,QAAAA,aAAa,EAAE;AAAzC,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAG,kCAAiCJ,KAAK,CAACC,WAAY,EAD7D;AAEE,MAAA,EAAE,EAAED,KAAK,CAACK,EAFZ;AAGE,MAAA,KAAK,EAAEL,KAAK,CAACM,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAqBD,GAzBkB,CAArB;AA2BA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCT,YAAtC,CADF,CADF;AAKD,CA1CH;;AA6CA,eAAeV,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport Favorite from \"./Favorite\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nconst MovieList = ({movies}) => {\n  const [favorite, setFavorite] = useState([])\n  const arr = []\n\n  const {children} = this.props\n\n  \n if(movies.length === 0){\n   return(<div style={{display:'flex', justifyContent:'center'}}><h4>No results</h4> </div>)\n }\n    const renderedList = movies\n      .filter((movie) => movie.poster_path !== null)\n      .map((movie, key) => {\n       \n        return (\n          <div\n            key={key}\n            style={{ display: \"inline-flex\", flexDirection: \"column\" }}\n          >\n            <MovieCard\n              image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n              id={movie.id}\n              title={movie.title}\n              \n            />\n            \n              \n            \n            \n           \n           \n           \n            \n          </div>\n        );\n      });\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div className=\"movie-rendered-list\">{renderedList}</div>\n      </div>\n    );\n  }\n\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}