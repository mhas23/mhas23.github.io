{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js\";\nimport React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite';\nimport { withFirebase } from '../firebase';\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || [];\nlet newID;\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: false\n    };\n\n    this.handleFavs = props => {\n      newID = this.props.firebase.item(this.props.userID);\n      newID.on(\"child_added\", snap => {\n        console.log(snap.val());\n      });\n      const found = arr.some(el => el.id === props.movie[0].id);\n\n      if (!found) {\n        this.setState({\n          favorite: true\n        });\n        arr.push({\n          id: props.movie[0].id,\n          title: props.movie[0].title,\n          poster_path: props.movie[0].poster_path,\n          favorite: true,\n          release_date: props.movie[0].release_date\n        });\n\n        if (!this.props.firebase.auth.currentUser.isAnonymous) {\n          newID.push({\n            id: props.movie[0].id,\n            title: props.movie[0].title,\n            poster_path: props.movie[0].poster_path,\n            favorite: true,\n            release_date: props.movie[0].release_date\n          });\n        }\n      } else {\n        if (window.confirm(`Remove \"${props.movie[0].title}\" from Favorites?`)) {\n          this.setState({\n            favorite: false\n          });\n          const ref = this.props.firebase.user(this.props.userID).child(\"favorites\").orderByKey();\n          ref.once(\"value\", snap => {\n            snap.forEach(child => {\n              if (props.movie[0].id === child.val().id) {\n                this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"));\n              }\n            });\n          });\n        }\n      }\n      /*\n      if(arr.includes(...props.movie)){\n        const fav = arr.indexOf(...props.movie)\n        arr.splice(fav, 1)\n        localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n      }else{\n        props.movie.map((index, key) => {\n            arr.push(...props.movie)\n            this.setState({\n              favorites: arr\n            })\n          }\n        )\n      }\n      */\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" movie-info\"\n      /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/info/${this.props.id}/${encodeURIComponent(this.props.title)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Favorite, {\n      key: this.props.id,\n      id: this.props.id,\n      title: this.props.title,\n      release_date: this.props.release_date,\n      img: this.props.image,\n      handleFav: this.handleFavs,\n      isLoggedIn: this.props.isLoggedIn,\n      userID: this.props.userID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\n;\nexport default withFirebase(MovieCard);","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js"],"names":["React","Link","Favorite","withFirebase","arr","JSON","parse","localStorage","getItem","newID","MovieCard","Component","state","favorite","handleFavs","props","firebase","item","userID","on","snap","console","log","val","found","some","el","id","movie","setState","push","title","poster_path","release_date","auth","currentUser","isAnonymous","window","confirm","ref","user","child","orderByKey","once","forEach","childItems","key","then","render","encodeURIComponent","image","width","isLoggedIn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite'\nimport {withFirebase} from '../firebase'\n\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || []\nlet newID\n\nclass MovieCard extends React.Component {\n\n  \n  state = {\n    favorite: false\n  }\n\n  \nhandleFavs = (props) => {\n  newID  = this.props.firebase.item(this.props.userID)\n  newID.on(\"child_added\", snap => {console.log(snap.val())})\n\n  const found = arr.some(el => el.id === props.movie[0].id)\n  \n    if (!found){\n      this.setState({\n        favorite: true\n      })\n      \n      arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n      if(!this.props.firebase.auth.currentUser.isAnonymous){\n      newID.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n\n    }\n  }\n  else{\n    if(window.confirm(`Remove \"${props.movie[0].title}\" from Favorites?`)){\n\n    this.setState({\n      favorite: false\n    })\n   \n    const ref = this.props.firebase.user(this.props.userID).child(\"favorites\").orderByKey()\n    ref.once(\"value\", snap => {\n    snap.forEach(child => {\n      if(props.movie[0].id === child.val().id){\n        this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"))\n      }\n    })\n  })\n\n}\n  }\n  /*\n  if(arr.includes(...props.movie)){\n    const fav = arr.indexOf(...props.movie)\n    arr.splice(fav, 1)\n    localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n  }else{\n    props.movie.map((index, key) => {\n        arr.push(...props.movie)\n        this.setState({\n          favorites: arr\n        })\n      }\n    )\n  }\n  */\n\n\n}\n\n\n\n\n\nrender(){\n\n  return (\n    <div className=\"movie-list\">\n      <div\n        className=\" movie-info\" /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      >\n        <Link to={`/info/${this.props.id}/${encodeURIComponent(this.props.title)}`}>\n          <img src={this.props.image} style={{ width: \"100%\" }} alt=\"Movie\" />\n            \n        </Link>\n      </div>  \n         <Favorite key={this.props.id} id={this.props.id} title={this.props.title} release_date={this.props.release_date} img={this.props.image} handleFav={this.handleFavs} isLoggedIn={this.props.isLoggedIn} userID={this.props.userID}/>\n    </div>\n  );\n}\n};\n\nexport default withFirebase(MovieCard);\n"]},"metadata":{},"sourceType":"module"}