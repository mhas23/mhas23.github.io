{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst MovieList = ({\n  movies,\n  props\n}) => {\n  const [loading, setLoading] = useState(true);\n  let renderedList;\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    return () => setLoading(true);\n  }, [movies]);\n\n  if (movies.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 67\n      }\n    }, \"No results\"), \" \");\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(ClipLoader, {\n      size: 150,\n      color: \"#123abc\",\n      css: `\n        display: block;\n        margin: 0 auto;\n        border-color: black;\n      `,\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    });\n  } else {\n    renderedList = movies.filter(movie => movie.poster_path !== null).map((movie, key) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: key,\n        style: {\n          display: \"inline-flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MovieCard, {\n        image: `https://image.tmdb.org/t/p/w185${movie.poster_path}`,\n        id: movie.id,\n        title: movie.title,\n        release_date: movie.release_date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }), console.log(props));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-rendered-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, renderedList));\n};\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js"],"names":["React","useState","useEffect","MovieCard","ClipLoader","MovieList","movies","props","loading","setLoading","renderedList","setTimeout","length","display","justifyContent","filter","movie","poster_path","map","key","flexDirection","id","title","release_date","console","log","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAqB;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAIS,YAAJ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAIA,WAAM,MAAMA,UAAU,CAAC,IAAD,CAAtB;AACD,GANQ,EAMP,CAACH,MAAD,CANO,CAAT;;AAQA,MAAGA,MAAM,CAACM,MAAP,KAAkB,CAArB,EAAuB;AACrB,wBAAO;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,cAAc,EAAC;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAvD,MAAP;AACD;;AAED,MAAGN,OAAH,EAAW;AACT,wBACE,oBAAC,UAAD;AACA,MAAA,IAAI,EAAE,GADN;AAEA,MAAA,KAAK,EAAE,SAFP;AAGA,MAAA,GAAG,EAAG;;;;OAHN;AAQA,MAAA,OAAO,EAAEA,OART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD,GAbD,MAaK;AAGFE,IAAAA,YAAY,GAAGJ,MAAM,CACnBS,MADa,CACLC,KAAD,IAAWA,KAAK,CAACC,WAAN,KAAsB,IAD3B,EAEbC,GAFa,CAET,CAACF,KAAD,EAAQG,GAAR,KAAgB;AAEnB,0BACE;AACE,QAAA,GAAG,EAAEA,GADP;AAEE,QAAA,KAAK,EAAE;AAAEN,UAAAA,OAAO,EAAE,aAAX;AAA0BO,UAAAA,aAAa,EAAE;AAAzC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAG,kCAAiCJ,KAAK,CAACC,WAAY,EAD7D;AAEE,QAAA,EAAE,EAAED,KAAK,CAACK,EAFZ;AAGE,QAAA,KAAK,EAAEL,KAAK,CAACM,KAHf;AAIE,QAAA,YAAY,EAAEN,KAAK,CAACO,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAWGC,OAAO,CAACC,GAAR,CAAYlB,KAAZ,CAXH,CADF;AAmBD,KAvBa,CAAf;AAwBA;;AAED,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEmB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsChB,YAAtC,CADF,CADF;AAKD,CA/DH;;AAkEA,eAAeL,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Movies.css\";\nimport MovieCard from \"./MovieCard\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nconst MovieList = ({movies, props}) => {\n  const [loading, setLoading] = useState(true)\n  let renderedList;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false)\n    }, 1000)\n\n    return() => setLoading(true)\n  },[movies])\n\n  if(movies.length === 0){\n    return(<div style={{display:'flex', justifyContent:'center'}}><h4>No results</h4> </div>)\n  }\n\n  if(loading){\n    return(\n      <ClipLoader\n      size={150}\n      color={\"#123abc\"}\n      css={`\n        display: block;\n        margin: 0 auto;\n        border-color: black;\n      `}\n      loading={loading}\n    ></ClipLoader>\n    )\n  }else{\n\n\n     renderedList = movies\n      .filter((movie) => movie.poster_path !== null)\n      .map((movie, key) => {\n       \n        return (\n          <div\n            key={key}\n            style={{ display: \"inline-flex\", flexDirection: \"column\" }}\n          >\n            <MovieCard\n              image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n              id={movie.id}\n              title={movie.title}\n              release_date={movie.release_date}\n              \n            />\n            {console.log(props)}\n           \n           \n           \n            \n          </div>\n        );\n      });\n    }\n\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <div className=\"movie-rendered-list\">{renderedList}</div>\n      </div>\n    );\n  }\n\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}