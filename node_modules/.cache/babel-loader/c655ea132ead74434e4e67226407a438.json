{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/Pages/MovieInfo/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Search from '../../components/Search';\nimport Header from '../../components/Header';\nimport '../../components/Search/Search.css';\nimport Movie_API from '../../api/Movie_API';\nimport MovieList from '../../components/Movies/MovieList';\nimport '../styles.css';\nimport Logo from '../../components/TMDB-Image';\nimport Favorites from '../../components/Movies/Favorite';\nimport Overlay from 'react-bootstrap/Overlay';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n/*\nconst MovieInfo = () => {\n    \n    return(\n        <div>\n           <Header />\n           <Icon />\n           <div style={{textAlign:\"center\"}}>\n               jkjkjkjkj\n           </div>\n           <div style={{textAlign:\"center\", position:'relative', top:'100px'}}>\n               <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p>\n           </div>\n           <div style={{marginTop:\"550px\"}}>\n                <Search  />\n           </div>\n        </div>\n    )\n}\n*/\n\nfunction MovieInfo({\n  match\n}) {\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const fetchInfo = await Movie_API.get(`/movie/${match.params.id}`, {\n        params: {\n          api_key: process.env.REACT_APP_API,\n          language: 'en-US'\n        }\n      });\n      const info = await fetchInfo.data;\n      setInfo(info);\n      window.scrollTo(0, 0);\n    };\n\n    fetchInfo();\n  }, [match]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      const fetchCast = await Movie_API.get(`/movie/${match.params.id}/credits`, {\n        params: {\n          api_key: process.env.REACT_APP_API\n        }\n      });\n      const castInfo = await fetchCast.data.cast;\n      setCastInfo(castInfo);\n      console.log(castInfo);\n      window.scrollTo(0, 0);\n    };\n\n    fetchCast();\n  }, [match]);\n  useEffect(() => {\n    const fetchCrew = async () => {\n      const fetchCrew = await Movie_API.get(`/movie/${match.params.id}/credits`, {\n        params: {\n          api_key: process.env.REACT_APP_API\n        }\n      });\n      const crewInfo = await fetchCrew.data.crew;\n      setCrewInfo(crewInfo);\n      window.scrollTo(0, 0);\n    };\n\n    fetchCrew();\n  }, [match]);\n  useEffect(() => {\n    const fetchRecommend = async () => {\n      const fetchRecommend = await Movie_API.get(`/movie/${match.params.id}/recommendations`, {\n        params: {\n          api_key: process.env.REACT_APP_API\n        }\n      });\n      const recommendInfo = await fetchRecommend.data.results;\n      setRecInfo(recommendInfo);\n      console.log(recommendInfo);\n      window.scrollTo(0, 0);\n    };\n\n    fetchRecommend();\n  }, [match]);\n  const [info, setInfo] = useState({});\n  const [castInfo, setCastInfo] = useState([]);\n  const [crewInfo, setCrewInfo] = useState([]);\n  const [recommendInfo, setRecInfo] = useState([]);\n  return (\n    /*#__PURE__*/\n\n    /*\n                <div>\n                <Header />\n                <div className=\"title\">\n                    { info.title !== info.original_title ? <h2> {`${info.title} (${info.original_title})`}</h2> : <h2 style={{display:'inline-block'}}> {info.original_title}</h2>}\n                     <h2 style={{display:'inline-block', marginLeft:'10px'}}>({info.release_date})</h2>\n                </div>\n                <div style={{marginLeft:'20px'}}>\n                    <div className=\"movie\">\n                        <img src={`https://image.tmdb.org/t/p/w185${info.poster_path}`} className=\"movie-img\" alt=\"Movie title\"/>\n                        <Favorites />\n                    </div>\n                    <span>\n                        <h3 style={{textAlign:'left' ,display:'inline-block', marginLeft:'100px'}}>Rating: {info.vote_average}/10</h3>\n                    </span>\n                    <div className=\"description\">\n                        <p style={{display:'inline-block'}}>{info.overview === \"\" ? \"No info here\" : info.overview } </p>\n                    </div>\n               \n                    \n                </div>\n                \n                <div style={{marginTop:\"550px\"}}>\n                <h2 style={{display: 'inline', position:'relative', bottom:'200px', left:'600px'}}>Continue Searching Below <span role=\"img\" aria-label=\"down\">⬇️</span> </h2>\n                \n                    <Search  />\n                </div>\n    \n                <Logo />\n                \n                </div>\n    \n                */\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://image.tmdb.org/t/p/w185${info.poster_path}`,\n      alt: \"Movie Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Favorites, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'auto auto auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \"Rating: \", info.vote_average, \"/10\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \"Voter Count: \", info.vote_count), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, \"Runtime: \", info.runtime, \" minutes\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, info.overview === \"\" ? \"No info here\" : info.overview, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        overflowX: 'scroll',\n        overflowY: 'hidden',\n        marginTop: '20px',\n        marginBottom: '90px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, castInfo.map((cast, key) => /*#__PURE__*/React.createElement(OverlayTrigger, {\n      key: key,\n      placement: \"bottom\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        key: key,\n        style: {\n          marginTop: '20px',\n          textAlign: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }\n      }, cast.character.slice(0, -7), \"(\", cast.name, \")\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100px',\n        height: '122px',\n        marginRight: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      key: key,\n      alt: cast.name,\n      src: cast.profile_path === null ? 'https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg' : `https://image.tmdb.org/t/p/w185${cast.profile_path}`,\n      style: {\n        borderRadius: \"100%\",\n        width: '95px',\n        height: '113px',\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 34\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        overflowX: 'scroll',\n        overflowY: 'hidden',\n        marginTop: '20px',\n        marginBottom: '90px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, crewInfo.map((crew, key) => /*#__PURE__*/React.createElement(OverlayTrigger, {\n      key: key,\n      placement: \"bottom\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        key: key,\n        style: {\n          marginTop: '20px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }\n      }, crew.name, \" (\", crew.job, \")\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100px',\n        height: '122px',\n        marginRight: '50px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      key: key,\n      alt: crew.name,\n      src: crew.profile_path === null ? 'https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg' : `https://image.tmdb.org/t/p/w185${crew.profile_path}`,\n      style: {\n        borderRadius: \"50%\",\n        width: '95px',\n        height: '113px',\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 34\n      }\n    }))))), console.log(recommendInfo), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, \"Recommendations\")), /*#__PURE__*/React.createElement(MovieList, {\n      movies: recommendInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }))\n  );\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/Pages/MovieInfo/index.js"],"names":["React","useState","useEffect","Search","Header","Movie_API","MovieList","Logo","Favorites","Overlay","OverlayTrigger","Tooltip","MovieInfo","match","fetchInfo","get","params","id","api_key","process","env","REACT_APP_API","language","info","data","setInfo","window","scrollTo","fetchCast","castInfo","cast","setCastInfo","console","log","fetchCrew","crewInfo","crew","setCrewInfo","fetchRecommend","recommendInfo","results","setRecInfo","display","flexDirection","poster_path","gridTemplateColumns","vote_average","vote_count","runtime","overview","overflowX","overflowY","marginTop","marginBottom","map","key","textAlign","justifyContent","character","slice","name","width","height","marginRight","profile_path","borderRadius","padding","job"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,oCAAP;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,iBAAxC;AAGA;;;;;;;;;;;;;;;;;;;;;AAuBK,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA4B;AACzBX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,SAAS,GAAG,YAAY;AAC1B,YAAMA,SAAS,GAAG,MAAMT,SAAS,CAACU,GAAV,CAAe,UAASF,KAAK,CAACG,MAAN,CAAaC,EAAG,EAAxC,EAA0C;AAC9DD,QAAAA,MAAM,EAAC;AACHE,UAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADlB;AAEHC,UAAAA,QAAQ,EAAE;AAFP;AADuD,OAA1C,CAAxB;AAOA,YAAMC,IAAI,GAAG,MAAMT,SAAS,CAACU,IAA7B;AAEAC,MAAAA,OAAO,CAACF,IAAD,CAAP;AACAG,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEH,KAbD;;AAcAb,IAAAA,SAAS;AACZ,GAhBQ,EAgBN,CAACD,KAAD,CAhBM,CAAT;AAkBAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,SAAS,GAAG,YAAY;AAC1B,YAAMA,SAAS,GAAG,MAAMvB,SAAS,CAACU,GAAV,CAAe,UAASF,KAAK,CAACG,MAAN,CAAaC,EAAG,UAAxC,EAAkD;AACtED,QAAAA,MAAM,EAAC;AACHE,UAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADlB;AAD+D,OAAlD,CAAxB;AAMA,YAAMQ,QAAQ,GAAG,MAAMD,SAAS,CAACJ,IAAV,CAAeM,IAAtC;AAEAC,MAAAA,WAAW,CAACF,QAAD,CAAX;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAH,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEH,KAdD;;AAeAC,IAAAA,SAAS;AACZ,GAjBQ,EAiBN,CAACf,KAAD,CAjBM,CAAT;AAmBAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgC,SAAS,GAAG,YAAY;AAC1B,YAAMA,SAAS,GAAG,MAAM7B,SAAS,CAACU,GAAV,CAAe,UAASF,KAAK,CAACG,MAAN,CAAaC,EAAG,UAAxC,EAAkD;AACtED,QAAAA,MAAM,EAAC;AACHE,UAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADlB;AAD+D,OAAlD,CAAxB;AAMA,YAAMc,QAAQ,GAAG,MAAMD,SAAS,CAACV,IAAV,CAAeY,IAAtC;AAEAC,MAAAA,WAAW,CAACF,QAAD,CAAX;AAEAT,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEH,KAbD;;AAcAO,IAAAA,SAAS;AACZ,GAhBQ,EAgBN,CAACrB,KAAD,CAhBM,CAAT;AAkBAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoC,cAAc,GAAG,YAAY;AAC/B,YAAMA,cAAc,GAAG,MAAMjC,SAAS,CAACU,GAAV,CAAe,UAASF,KAAK,CAACG,MAAN,CAAaC,EAAG,kBAAxC,EAA0D;AACnFD,QAAAA,MAAM,EAAC;AACHE,UAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADlB;AAD4E,OAA1D,CAA7B;AAMA,YAAMkB,aAAa,GAAG,MAAMD,cAAc,CAACd,IAAf,CAAoBgB,OAAhD;AAEAC,MAAAA,UAAU,CAACF,aAAD,CAAV;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,aAAZ;AACAb,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEH,KAbD;;AAcAW,IAAAA,cAAc;AACjB,GAhBQ,EAgBN,CAACzB,KAAD,CAhBM,CAAT;AAoBA,QAAM,CAACU,IAAD,EAAOE,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC4B,QAAD,EAAWE,WAAX,IAA0B9B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkC,QAAD,EAAWE,WAAX,IAA0BpC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsC,aAAD,EAAgBE,UAAhB,IAA8BxC,QAAQ,CAAC,EAAD,CAA5C;AAMA;AAAA;;AAER;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAM,MAAA,KAAK,EAAE;AAACyC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC;AAA/B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAIC;AAAK,MAAA,GAAG,EAAG,kCAAiCpB,IAAI,CAACqB,WAAY,EAA7D;AAAgE,MAAA,GAAG,EAAC,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,eAMQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR,CAFA,eAWA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACF,QAAAA,OAAO,EAAE,MAAV;AAAkBG,QAAAA,mBAAmB,EAAE;AAAvC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAatB,IAAI,CAACuB,YAAlB,QADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBvB,IAAI,CAACwB,UAAvB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcxB,IAAI,CAACyB,OAAnB,aAHJ,CADJ,eAMI;AAAG,MAAA,KAAK,EAAE;AAACN,QAAAA,OAAO,EAAC;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCnB,IAAI,CAAC0B,QAAL,KAAkB,EAAlB,GAAuB,cAAvB,GAAwC1B,IAAI,CAAC0B,QAAlF,MANJ,CAXA,CAFJ,eAwBI;AAAK,MAAA,KAAK,EAAE;AAACP,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC,KAA/B;AAAsCO,QAAAA,SAAS,EAAC,QAAhD;AAAyDC,QAAAA,SAAS,EAAC,QAAnE;AAA6EC,QAAAA,SAAS,EAAC,MAAvF;AAA+FC,QAAAA,YAAY,EAAC;AAA5G,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCxB,QAAQ,CACRyB,GADA,CACI,CAACxB,IAAD,EAAMyB,GAAN,kBACD,oBAAC,cAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,SAAS,EAAC,QAFd;AAGI,MAAA,OAAO,eACH,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,GAAd;AAAmB,QAAA,KAAK,EAAE;AAACH,UAAAA,SAAS,EAAC,MAAX;AAAmBI,UAAAA,SAAS,EAAC,QAA7B;AAAuCC,UAAAA,cAAc,EAAC;AAAtD,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4F3B,IAAI,CAAC4B,SAAL,CAAeC,KAAf,CAAqB,CAArB,EAAuB,CAAC,CAAxB,CAA5F,OAAyH7B,IAAI,CAAC8B,IAA9H,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQQ;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,MAAM,EAAC,OAAvB;AAAgCC,QAAAA,WAAW,EAAC;AAA5C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAK,MAAA,GAAG,EAAER,GAAV;AAAe,MAAA,GAAG,EAAEzB,IAAI,CAAC8B,IAAzB;AAA+B,MAAA,GAAG,EAC9B9B,IAAI,CAACkC,YAAL,KAAsB,IAAtB,GAA6B,kLAA7B,GAAmN,kCAAiClC,IAAI,CAACkC,YAAa,EAD1Q;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAC,MAAf;AAAsBJ,QAAAA,KAAK,EAAC,MAA5B;AAAoCC,QAAAA,MAAM,EAAC,OAA3C;AAAoDI,QAAAA,OAAO,EAAC;AAA5D,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CARR,CAFH,CADD,CAxBJ,eA6CM;AAAK,MAAA,KAAK,EAAE;AAACxB,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,aAAa,EAAC,KAA/B;AAAsCO,QAAAA,SAAS,EAAC,QAAhD;AAAyDC,QAAAA,SAAS,EAAC,QAAnE;AAA6EC,QAAAA,SAAS,EAAC,MAAvF;AAA+FC,QAAAA,YAAY,EAAC;AAA5G,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEClB,QAAQ,CACVmB,GADE,CACE,CAAClB,IAAD,EAAMmB,GAAN,kBACD,oBAAC,cAAD;AACI,MAAA,GAAG,EAAEA,GADT;AAEI,MAAA,SAAS,EAAC,QAFd;AAGI,MAAA,OAAO,eACH,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,GAAd;AAAmB,QAAA,KAAK,EAAE;AAACH,UAAAA,SAAS,EAAC,MAAX;AAAmBI,UAAAA,SAAS,EAAC;AAA7B,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmEpB,IAAI,CAACwB,IAAxE,QAAgFxB,IAAI,CAAC+B,GAArF,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQQ;AAAK,MAAA,KAAK,EAAE;AAACN,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,MAAM,EAAC,OAAvB;AAAgCC,QAAAA,WAAW,EAAC;AAA5C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAK,MAAA,GAAG,EAAER,GAAV;AAAe,MAAA,GAAG,EAAEnB,IAAI,CAACwB,IAAzB;AAA+B,MAAA,GAAG,EAC9BxB,IAAI,CAAC4B,YAAL,KAAsB,IAAtB,GAA6B,kLAA7B,GAAmN,kCAAiC5B,IAAI,CAAC4B,YAAa,EAD1Q;AAEG,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAC,KAAf;AAAqBJ,QAAAA,KAAK,EAAC,MAA3B;AAAmCC,QAAAA,MAAM,EAAC,OAA1C;AAAmDI,QAAAA,OAAO,EAAC;AAA3D,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CARR,CAFD,CAFD,CA7CN,EAmEKlC,OAAO,CAACC,GAAR,CAAYM,aAAZ,CAnEL,eAqEI;AAAK,MAAA,KAAK,EAAE;AAACiB,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CArEJ,eA0EI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEjB,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1EJ,eAgFI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhFJ,eAkFI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlFJ;AApCJ;AA0HH;;AAKL,eAAe3B,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Search from '../../components/Search'\nimport Header from '../../components/Header'\nimport '../../components/Search/Search.css'\nimport Movie_API from '../../api/Movie_API'\nimport MovieList from '../../components/Movies/MovieList'\nimport '../styles.css'\nimport Logo from '../../components/TMDB-Image'\nimport Favorites from '../../components/Movies/Favorite'\nimport Overlay from 'react-bootstrap/Overlay'\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\n\n\n/*\nconst MovieInfo = () => {\n    \n    return(\n        <div>\n           <Header />\n           <Icon />\n           <div style={{textAlign:\"center\"}}>\n               jkjkjkjkj\n           </div>\n           <div style={{textAlign:\"center\", position:'relative', top:'100px'}}>\n               <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p>\n           </div>\n           <div style={{marginTop:\"550px\"}}>\n                <Search  />\n           </div>\n        </div>\n    )\n}\n*/\n\n\n\n     function MovieInfo({match}) {\n        useEffect(() => {\n            const fetchInfo = async () => {\n                const fetchInfo = await Movie_API.get(`/movie/${match.params.id}`,{\n                    params:{\n                        api_key: process.env.REACT_APP_API,\n                        language: 'en-US'\n                    }\n                });\n                \n                const info = await fetchInfo.data\n        \n                setInfo(info)\n                window.scrollTo(0, 0)\n\n            };\n            fetchInfo();\n        }, [match]);\n\n        useEffect(() => {\n            const fetchCast = async () => {\n                const fetchCast = await Movie_API.get(`/movie/${match.params.id}/credits`,{\n                    params:{\n                        api_key: process.env.REACT_APP_API,\n                    }\n                });\n                \n                const castInfo = await fetchCast.data.cast\n                \n                setCastInfo(castInfo)\n        \n                console.log(castInfo)\n                window.scrollTo(0, 0)\n\n            };\n            fetchCast();\n        }, [match]);\n\n        useEffect(() => {\n            const fetchCrew = async () => {\n                const fetchCrew = await Movie_API.get(`/movie/${match.params.id}/credits`,{\n                    params:{\n                        api_key: process.env.REACT_APP_API,\n                    }\n                });\n\n                const crewInfo = await fetchCrew.data.crew\n                \n                setCrewInfo(crewInfo)\n        \n                window.scrollTo(0, 0)\n\n            };\n            fetchCrew();\n        }, [match]);\n\n        useEffect(() => {\n            const fetchRecommend = async () => {\n                const fetchRecommend = await Movie_API.get(`/movie/${match.params.id}/recommendations`,{\n                    params:{\n                        api_key: process.env.REACT_APP_API,\n                    }\n                });\n                \n                const recommendInfo = await fetchRecommend.data.results\n                \n                setRecInfo(recommendInfo)\n                console.log(recommendInfo)\n                window.scrollTo(0, 0)\n\n            };\n            fetchRecommend();\n        }, [match]);\n        \n \n    \n        const [info, setInfo] = useState({});\n        const [castInfo, setCastInfo] = useState([]);\n        const [crewInfo, setCrewInfo] = useState([]);\n        const [recommendInfo, setRecInfo] = useState([]);\n\n    \n       \n\n\n        return (\n          \n/*\n            <div>\n            <Header />\n            <div className=\"title\">\n                { info.title !== info.original_title ? <h2> {`${info.title} (${info.original_title})`}</h2> : <h2 style={{display:'inline-block'}}> {info.original_title}</h2>}\n                 <h2 style={{display:'inline-block', marginLeft:'10px'}}>({info.release_date})</h2>\n            </div>\n            <div style={{marginLeft:'20px'}}>\n                <div className=\"movie\">\n                    <img src={`https://image.tmdb.org/t/p/w185${info.poster_path}`} className=\"movie-img\" alt=\"Movie title\"/>\n                    <Favorites />\n                </div>\n                <span>\n                    <h3 style={{textAlign:'left' ,display:'inline-block', marginLeft:'100px'}}>Rating: {info.vote_average}/10</h3>\n                </span>\n                <div className=\"description\">\n                    <p style={{display:'inline-block'}}>{info.overview === \"\" ? \"No info here\" : info.overview } </p>\n                </div>\n           \n                \n            </div>\n            \n            <div style={{marginTop:\"550px\"}}>\n            <h2 style={{display: 'inline', position:'relative', bottom:'200px', left:'600px'}}>Continue Searching Below <span role=\"img\" aria-label=\"down\">⬇️</span> </h2>\n            \n                <Search  />\n            </div>\n\n            <Logo />\n            \n            </div>\n\n            */\n\n            <div>\n                <Header/>\n                <span className=\"info\">\n\n                <span style={{display:'flex', flexDirection:'column'}}>\n                    <span className=\"title\">\n                        \n                     </span>\n                 <img src={`https://image.tmdb.org/t/p/w185${info.poster_path}`} alt=\"Movie Title\" />\n                 \n                        <Favorites />\n                    \n                </span>\n                <div className=\"description\">\n                    <div style={{display: 'grid', gridTemplateColumns: 'auto auto auto'}}>\n                        <h4>Rating: {info.vote_average}/10</h4>\n                        <h4>Voter Count: {info.vote_count}</h4>\n                        <h4>Runtime: {info.runtime} minutes</h4>\n                    </div>\n                    <p style={{display:'inline-block'}}>{info.overview === \"\" ? \"No info here\" : info.overview } </p>\n                </div>\n\n\n                </span>\n                <div style={{display:'flex', flexDirection:'row', overflowX:'scroll',overflowY:'hidden', marginTop:'20px', marginBottom:'90px'}}>\n                {castInfo\n                .map((cast,key) => (\n                    <OverlayTrigger\n                        key={key}\n                        placement=\"bottom\"\n                        overlay = {\n                            <Tooltip key={key} style={{marginTop:'20px', textAlign:'center', justifyContent:'center'}}>{cast.character.slice(0,-7)}({cast.name})</Tooltip>\n                        }\n                        >\n                           \n                            <div style={{width:'100px', height:'122px', marginRight:'50px'}}>\n                                 <img key={key} alt={cast.name} src={\n                                     cast.profile_path === null ? 'https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg' : `https://image.tmdb.org/t/p/w185${cast.profile_path}`} \n                                     style={{ borderRadius:\"100%\",width:'95px', height:'113px', padding:\"5px\"}}/>\n                             </div>\n                           \n                        </OverlayTrigger>\n                ))}\n                  </div>\n\n                  <div style={{display:'flex', flexDirection:'row', overflowX:'scroll',overflowY:'hidden', marginTop:'20px', marginBottom:'90px'}}>\n\n                  {crewInfo\n                .map((crew,key) => (\n                    <OverlayTrigger\n                        key={key}\n                        placement=\"bottom\"\n                        overlay = {\n                            <Tooltip key={key} style={{marginTop:'20px', textAlign:'center'}}>{crew.name} ({crew.job})</Tooltip>\n                        }\n                        >\n                           \n                            <div style={{width:'100px', height:'122px', marginRight:'50px'}}>\n                                 <img key={key} alt={crew.name} src=\n                                    {crew.profile_path === null ? 'https://previews.123rf.com/images/urfandadashov/urfandadashov1805/urfandadashov180500070/100957966-photo-not-available-icon-isolated-on-white-background-vector-illustration.jpg' : `https://image.tmdb.org/t/p/w185${crew.profile_path}`} \n                                    style={{ borderRadius:\"50%\",width:'95px', height:'113px', padding:\"5px\"}}/>\n                             </div>\n                           \n                        </OverlayTrigger>\n                ))}\n                  </div>\n\n                {console.log(recommendInfo)}\n\n                <div style={{textAlign:'center'}}>\n                    <h3>Recommendations</h3>\n                </div>\n\n               \n                <MovieList movies={recommendInfo}/>\n             \n\n                \n\n\n                <Search />\n\n                <Logo />\n\n            </div>\n        )\n    }\n    \n\n\n\nexport default MovieInfo\n\n"]},"metadata":{},"sourceType":"module"}