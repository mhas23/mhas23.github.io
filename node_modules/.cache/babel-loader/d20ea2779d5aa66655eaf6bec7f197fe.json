{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js\";\nimport React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from \"./Favorite\";\nimport { withFirebase } from \"../firebase\";\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || [];\nlet newID;\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: false\n    };\n\n    this.handleFavs = props => {\n      newID = this.props.firebase.item(this.props.userID);\n      const found = arr.some(el => el.id === props.movie[0].id);\n      console.log(this.props.firebase.auth.currentUser.isAnonymous);\n\n      if (!found) {\n        this.setState({\n          favorite: true\n        });\n        arr.push({\n          id: props.movie[0].id,\n          title: props.movie[0].title,\n          poster_path: props.movie[0].poster_path,\n          favorite: true,\n          release_date: props.movie[0].release_date\n        });\n\n        if (!this.props.firebase.auth.currentUser.isAnonymous) {\n          newID.push({\n            id: props.movie[0].id,\n            title: props.movie[0].title,\n            poster_path: props.movie[0].poster_path,\n            favorite: true,\n            release_date: props.movie[0].release_date\n          });\n        }\n      } else {\n        const index = arr.findIndex(x => x.id === props.movie[0].id);\n        this.setState({\n          favorite: false\n        });\n        const ref = this.props.firebase.user(this.props.userID).child(\"favorites\").orderByKey();\n        ref.once(\"value\", snap => {\n          snap.forEach(child => {\n            if (props.movie[0].id === child.val().id) {\n              this.props.firebase.childItems(child.key, this.props.userID).then(() => console.log(\"remove successful\"));\n            }\n          });\n        });\n        arr.splice(index, 1);\n      }\n      /*\n      if(arr.includes(...props.movie)){\n      const fav = arr.indexOf(...props.movie)\n      arr.splice(fav, 1)\n      localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n      }else{\n      props.movie.map((index, key) => {\n          arr.push(...props.movie)\n          this.setState({\n            favorites: arr\n          })\n        }\n      )\n      }\n      */\n\n\n      console.log(this.props.firebase.auth.currentUser.uid);\n      localStorage.setItem(\"favoriteList\", JSON.stringify(arr));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" movie-info\"\n      /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/info/${this.props.id}/${encodeURIComponent(this.props.title)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Favorite, {\n      key: this.props.id,\n      id: this.props.id,\n      title: this.props.title,\n      release_date: this.props.release_date,\n      img: this.props.image,\n      handleFav: this.handleFavs,\n      isLoggedIn: this.props.isLoggedIn,\n      userID: this.props.userID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default withFirebase(MovieCard);","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js"],"names":["React","Link","Favorite","withFirebase","arr","JSON","parse","localStorage","getItem","newID","MovieCard","Component","state","favorite","handleFavs","props","firebase","item","userID","found","some","el","id","movie","console","log","auth","currentUser","isAnonymous","setState","push","title","poster_path","release_date","index","findIndex","x","ref","user","child","orderByKey","once","snap","forEach","val","childItems","key","then","splice","uid","setItem","stringify","render","encodeURIComponent","image","width","isLoggedIn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from \"./Favorite\";\nimport { withFirebase } from \"../firebase\";\n\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || [];\nlet newID;\n\nclass MovieCard extends React.Component {\n  state = {\n    favorite: false,\n  };\n\n  handleFavs = (props) => {\n    newID = this.props.firebase.item(this.props.userID);\n\n    const found = arr.some((el) => el.id === props.movie[0].id);\n    console.log(this.props.firebase.auth.currentUser.isAnonymous);\n\n    if (!found) {\n      this.setState({\n        favorite: true,\n      });\n\n      arr.push({\n        id: props.movie[0].id,\n        title: props.movie[0].title,\n        poster_path: props.movie[0].poster_path,\n        favorite: true,\n        release_date: props.movie[0].release_date,\n      });\n      if (!this.props.firebase.auth.currentUser.isAnonymous) {\n        newID.push({\n          id: props.movie[0].id,\n          title: props.movie[0].title,\n          poster_path: props.movie[0].poster_path,\n          favorite: true,\n          release_date: props.movie[0].release_date,\n        });\n      }\n    } else {\n      const index = arr.findIndex((x) => x.id === props.movie[0].id);\n\n      this.setState({\n        favorite: false,\n      });\n      const ref = this.props.firebase\n        .user(this.props.userID)\n        .child(\"favorites\")\n        .orderByKey();\n      ref.once(\"value\", (snap) => {\n        snap.forEach((child) => {\n          if (props.movie[0].id === child.val().id) {\n            this.props.firebase\n              .childItems(child.key, this.props.userID)\n              .then(() => console.log(\"remove successful\"));\n          }\n        });\n      });\n      arr.splice(index, 1);\n    }\n    /*\n  if(arr.includes(...props.movie)){\n    const fav = arr.indexOf(...props.movie)\n    arr.splice(fav, 1)\n    localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n  }else{\n    props.movie.map((index, key) => {\n        arr.push(...props.movie)\n        this.setState({\n          favorites: arr\n        })\n      }\n    )\n  }\n  */\n    console.log(this.props.firebase.auth.currentUser.uid);\n\n    localStorage.setItem(\"favoriteList\", JSON.stringify(arr));\n  };\n\n  render() {\n    return (\n      <div className=\"movie-list\">\n        <div\n          className=\" movie-info\" /*style={{display:'flex',flexDirection:'column-reverse'}} */\n        >\n          <Link\n            to={`/info/${this.props.id}/${encodeURIComponent(\n              this.props.title\n            )}`}\n          >\n            <img src={this.props.image} style={{ width: \"100%\" }} alt=\"Movie\" />\n          </Link>\n        </div>\n        <Favorite\n          key={this.props.id}\n          id={this.props.id}\n          title={this.props.title}\n          release_date={this.props.release_date}\n          img={this.props.image}\n          handleFav={this.handleFavs}\n          isLoggedIn={this.props.isLoggedIn}\n          userID={this.props.userID}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withFirebase(MovieCard);\n"]},"metadata":{},"sourceType":"module"}