{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js\";\nimport React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite';\nimport { withFirebase } from '../firebase';\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || [];\nlet newID;\n\nclass MovieCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: false\n    };\n\n    this.handleFavs = props => {\n      newID = this.props.firebase.item(this.props.userID);\n      const found = arr.some(el => el.id === props.movie[0].id);\n\n      if (!found) {\n        this.setState({\n          favorite: true\n        });\n        arr.push({\n          id: props.movie[0].id,\n          title: props.movie[0].title,\n          poster_path: props.movie[0].poster_path,\n          favorite: true,\n          release_date: props.movie[0].release_date\n        });\n        newID.push({\n          id: props.movie[0].id,\n          title: props.movie[0].title,\n          poster_path: props.movie[0].poster_path,\n          favorite: true,\n          release_date: props.movie[0].release_date\n        });\n      } else {\n        const index = arr.findIndex(x => x.id === props.movie[0].id);\n        this.setState({\n          favorite: false\n        });\n        arr.splice(index, 1);\n      }\n      /*\n      if(arr.includes(...props.movie)){\n        const fav = arr.indexOf(...props.movie)\n        arr.splice(fav, 1)\n        localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n      }else{\n        props.movie.map((index, key) => {\n            arr.push(...props.movie)\n            this.setState({\n              favorites: arr\n            })\n          }\n        )\n      }\n      */\n\n\n      this.props.firebase.favorites(this.props.userID, props.movie[0].id);\n      console.log(this.props.firebase.auth.currentUser.uid);\n      localStorage.setItem(\"favoriteList\", JSON.stringify(arr));\n    };\n  }\n\n  componentDidMount() {\n    const ref = this.props.firebase.ref();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \" movie-info\"\n      /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/info/${this.props.id}/${encodeURIComponent(this.props.title)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.image,\n      style: {\n        width: \"100%\"\n      },\n      alt: \"Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(Favorite, {\n      key: this.props.id,\n      id: this.props.id,\n      title: this.props.title,\n      release_date: this.props.release_date,\n      img: this.props.image,\n      handleFav: this.handleFavs,\n      isLoggedIn: this.props.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 10\n      }\n    }));\n  }\n\n}\n\n;\nexport default withFirebase(MovieCard);","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieCard.js"],"names":["React","Link","Favorite","withFirebase","arr","JSON","parse","localStorage","getItem","newID","MovieCard","Component","state","favorite","handleFavs","props","firebase","item","userID","found","some","el","id","movie","setState","push","title","poster_path","release_date","index","findIndex","x","splice","favorites","console","log","auth","currentUser","uid","setItem","stringify","componentDidMount","ref","render","encodeURIComponent","image","width","isLoggedIn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Movies.css\";\nimport { Link } from \"react-router-dom\";\nimport Favorite from './Favorite'\nimport {withFirebase} from '../firebase'\n\nlet arr = JSON.parse(localStorage.getItem(\"favoriteList\")) || []\nlet newID\n\nclass MovieCard extends React.Component {\n\n  \n  state = {\n    favorite: false\n  }\n\n  \nhandleFavs = (props) => {\n  newID  = this.props.firebase.item(this.props.userID)\n\n  const found = arr.some(el => el.id === props.movie[0].id)\n  if (!found){\n    this.setState({\n      favorite: true\n    })\n    \n    arr.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n    newID.push({id: props.movie[0].id, title: props.movie[0].title, poster_path: props.movie[0].poster_path, favorite: true, release_date: props.movie[0].release_date})\n\n  }\n  else{\n    const index = arr.findIndex(x => x.id === props.movie[0].id)\n    this.setState({\n      favorite: false\n    })\n    arr.splice(index, 1)\n  }\n  /*\n  if(arr.includes(...props.movie)){\n    const fav = arr.indexOf(...props.movie)\n    arr.splice(fav, 1)\n    localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n  }else{\n    props.movie.map((index, key) => {\n        arr.push(...props.movie)\n        this.setState({\n          favorites: arr\n        })\n      }\n    )\n  }\n  */\n this.props.firebase.favorites(this.props.userID, props.movie[0].id)\n console.log(this.props.firebase.auth.currentUser.uid)\n\n localStorage.setItem(\"favoriteList\", JSON.stringify(arr))\n\n}\n\ncomponentDidMount(){\n  const ref = this.props.firebase.ref()\n}\n\n\n\nrender(){\n\n  return (\n    <div className=\"movie-list\">\n      <div\n        className=\" movie-info\" /*style={{display:'flex',flexDirection:'column-reverse'}} */\n      >\n        <Link to={`/info/${this.props.id}/${encodeURIComponent(this.props.title)}`}>\n          <img src={this.props.image} style={{ width: \"100%\" }} alt=\"Movie\" />\n            \n        </Link>\n      </div>  \n         <Favorite key={this.props.id} id={this.props.id} title={this.props.title} release_date={this.props.release_date} img={this.props.image} handleFav={this.handleFavs} isLoggedIn={this.props.isLoggedIn}/>\n    </div>\n  );\n}\n};\n\nexport default withFirebase(MovieCard);\n"]},"metadata":{},"sourceType":"module"}