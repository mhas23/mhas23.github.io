{"ast":null,"code":"import _slicedToArray from\"/Users/mohidinhassan/movie_website_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./Movies.scss\";import MovieCard from\"./MovieCard\";import ClipLoader from\"react-spinners/ClipLoader\";var MovieList=function MovieList(_ref){var movies=_ref.movies,isLoggedIn=_ref.isLoggedIn,userID=_ref.userID;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var renderedList;useEffect(function(){var time=setTimeout(function(){setLoading(false);},1000);return function(){clearTimeout(time);setLoading(true);};},[movies]);if(movies.length===0){return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"center\"}},/*#__PURE__*/React.createElement(\"h4\",null,\"No results\"),\" \");}if(loading){return/*#__PURE__*/React.createElement(ClipLoader,{size:150,color:\"#123abc\",css:\"\\n          display: block;\\n          margin: 0 auto;\\n          border-color: black;\\n        \",loading:loading});}else{renderedList=movies.filter(function(movie){return movie.poster_path!==null;}).map(function(movie,key){return/*#__PURE__*/React.createElement(\"div\",{key:key,className:\"movie-list\"},/*#__PURE__*/React.createElement(MovieCard,{image:\"https://image.tmdb.org/t/p/w185\".concat(movie.poster_path),id:movie.id,title:movie.title,release_date:movie.release_date,isLoggedIn:isLoggedIn,userID:userID}));});}return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"movie-rendered-list\"},renderedList));};export default MovieList;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js"],"names":["React","useState","useEffect","MovieCard","ClipLoader","MovieList","movies","isLoggedIn","userID","loading","setLoading","renderedList","time","setTimeout","clearTimeout","length","display","justifyContent","filter","movie","poster_path","map","key","id","title","release_date","textAlign"],"mappings":"6JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAoC,IAAjCC,CAAAA,MAAiC,MAAjCA,MAAiC,CAAzBC,UAAyB,MAAzBA,UAAyB,CAAbC,MAAa,MAAbA,MAAa,eACtBP,QAAQ,CAAC,IAAD,CADc,wCAC7CQ,OAD6C,eACpCC,UADoC,eAEpD,GAAIC,CAAAA,YAAJ,CAEAT,SAAS,CAAC,UAAM,CACd,GAAIU,CAAAA,IAAI,CAAGC,UAAU,CAAC,UAAM,CAC1BH,UAAU,CAAC,KAAD,CAAV,CACD,CAFoB,CAElB,IAFkB,CAArB,CAKA,MAAO,WAAM,CACXI,YAAY,CAACF,IAAD,CAAZ,CACAF,UAAU,CAAC,IAAD,CAAV,CAED,CAJD,CAKD,CAXQ,CAWN,CAACJ,MAAD,CAXM,CAAT,CAaA,GAAIA,MAAM,CAACS,MAAP,GAAkB,CAAtB,CAAyB,CACvB,mBACE,2BAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,cAAc,CAAE,QAAnC,CAAZ,eACE,2CADF,CACsB,GADtB,CADF,CAKD,CAED,GAAIR,OAAJ,CAAa,CACX,mBACE,oBAAC,UAAD,EACE,IAAI,CAAE,GADR,CAEE,KAAK,CAAE,SAFT,CAGE,GAAG,mGAHL,CAQE,OAAO,CAAEA,OARX,EADF,CAYD,CAbD,IAaO,CACLE,YAAY,CAAGL,MAAM,CAClBY,MADY,CACL,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,WAAN,GAAsB,IAAjC,EADK,EAEZC,GAFY,CAER,SAACF,KAAD,CAAQG,GAAR,CAAgB,CACnB,mBACE,2BACE,GAAG,CAAEA,GADP,CAEE,SAAS,CAAC,YAFZ,eAIE,oBAAC,SAAD,EACE,KAAK,0CAAoCH,KAAK,CAACC,WAA1C,CADP,CAEE,EAAE,CAAED,KAAK,CAACI,EAFZ,CAGE,KAAK,CAAEJ,KAAK,CAACK,KAHf,CAIE,YAAY,CAAEL,KAAK,CAACM,YAJtB,CAKE,UAAU,CAAElB,UALd,CAME,MAAM,CAAEC,MANV,EAJF,CADF,CAeD,CAlBY,CAAf,CAmBD,CAED,mBACE,2BAAK,KAAK,CAAE,CAAEkB,SAAS,CAAE,QAAb,CAAZ,eACE,2BAAK,SAAS,CAAC,qBAAf,EAAsCf,YAAtC,CADF,CADF,CAKD,CAjED,CAmEA,cAAeN,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Movies.scss\";\nimport MovieCard from \"./MovieCard\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst MovieList = ({ movies, isLoggedIn, userID }) => {\n  const [loading, setLoading] = useState(true);\n  let renderedList;\n\n  useEffect(() => {\n    let time = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n\n    return () => {\n      clearTimeout(time);\n      setLoading(true);\n\n    };\n  }, [movies]);\n\n  if (movies.length === 0) {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h4>No results</h4>{\" \"}\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <ClipLoader\n        size={150}\n        color={\"#123abc\"}\n        css={`\n          display: block;\n          margin: 0 auto;\n          border-color: black;\n        `}\n        loading={loading}\n      ></ClipLoader>\n    );\n  } else {\n    renderedList = movies\n      .filter((movie) => movie.poster_path !== null)\n      .map((movie, key) => {\n        return (\n          <div\n            key={key}\n            className=\"movie-list\"\n          >\n            <MovieCard\n              image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n              id={movie.id}\n              title={movie.title}\n              release_date={movie.release_date}\n              isLoggedIn={isLoggedIn}\n              userID={userID}\n            />\n          </div>\n        );\n      });\n  }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div className=\"movie-rendered-list\">{renderedList}</div>\n    </div>\n  );\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}