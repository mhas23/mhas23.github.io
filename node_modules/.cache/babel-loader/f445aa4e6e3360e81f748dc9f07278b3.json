{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js\";\nimport React, { useState } from 'react';\nimport './Movies.css';\nimport FavoriteIcon from '../../images/favorite-icon.png';\nimport { Link } from 'react-router-dom';\nimport MovieCard from './MovieCard';\nimport Favorite from './Favorite';\n\nconst MovieList = ({\n  movies\n}) => {\n  const [clicked, setClicked] = useState(false);\n\n  if (movies.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, \"No results\");\n  } else {\n    const renderedList = movies.filter(movie => movie.poster_path !== null).map(movie => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MovieCard, {\n        image: `https://image.tmdb.org/t/p/w185${movie.poster_path}`,\n        id: movie.id,\n        title: movie.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Favorite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, renderedList);\n  }\n};\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/components/Movies/MovieList.js"],"names":["React","useState","FavoriteIcon","Link","MovieCard","Favorite","MovieList","movies","clicked","setClicked","length","textAlign","renderedList","filter","movie","poster_path","map","id","title","display","flexWrap"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,cAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAIA,MAAMC,SAAS,GAAI,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AAEA,MAAGM,MAAM,CAACG,MAAP,KAAkB,CAArB,EAAuB;AACnB,wBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,GAJD,MAIK;AAEP,UAAMC,YAAY,GAAGL,MAAM,CACpBM,MADc,CACPC,KAAK,IAAIA,KAAK,CAACC,WAAN,KAAsB,IADxB,EAEdC,GAFc,CAETF,KAAD,IAAW;AACZ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG,kCAAiCA,KAAK,CAACC,WAAY,EAAtE;AAAyE,QAAA,EAAE,EAAED,KAAK,CAACG,EAAnF;AAAuF,QAAA,KAAK,EAAEH,KAAK,CAACI,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAGA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CADJ;AAQH,KAXc,CAArB;AAgBE,wBACI;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,MAAT;AAAiBC,QAAAA,QAAQ,EAAC;AAA1B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,YADL,CADJ;AAKH;AACA,CA/BD;;AAiCA,eAAeN,SAAf","sourcesContent":["import React, {useState} from 'react'\nimport './Movies.css'\nimport FavoriteIcon from '../../images/favorite-icon.png'\nimport {Link} from 'react-router-dom'\nimport MovieCard from './MovieCard'\nimport Favorite from './Favorite'\n\n\n\nconst MovieList =  ({movies}) => {\n    const [clicked, setClicked] = useState(false)\n\n    if(movies.length === 0){\n        return(\n            <h3 style={{textAlign:'center'}}>No results</h3>\n        )\n    }else{\n\n  const renderedList = movies\n        .filter(movie => movie.poster_path !== null)\n        .map((movie) => {\n            return(\n                <div>\n                <MovieCard image={`https://image.tmdb.org/t/p/w185${movie.poster_path}`} id={movie.id} title={movie.title}/> \n\n                <Favorite />\n        \n         </div>\n            )\n        })\n    \n            \n        \n    \n    return (\n        <span  style={{display:'flex', flexWrap:'wrap'}}>\n            {renderedList}\n        </span>  \n    )\n}\n}\n\nexport default MovieList"]},"metadata":{},"sourceType":"module"}