{"ast":null,"code":"var _jsxFileName = \"/Users/mohidinhassan/movie_website_app/src/Pages/Filter/index.js\";\nimport React, { useState } from 'react';\nimport Search from '../../components/Search';\nimport Header from '../../components/Header';\nimport MovieCard from '../../components/Movies/MovieCard';\nimport Icon from '../../components/Icon';\nimport '../../components/Search/Search.css';\nimport Logo from '../../components/TMDB-Image';\nimport Movie_API from '../../api/Movie_API';\nlet response;\nconst genreID = [28, 12, 16, 35, 80, 99, 18, 10751, 14, 36, 27, 10402, 9648, 10749, 878, 10770, 53, 10752, 37];\nconst genreName = ['Action', 'Adventure', 'Animation', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'History', 'Horror', 'Music', 'Mystery', 'Romance', \"Science Fiction\", 'TV Movie', 'Thriller', 'War', 'Western'];\n\nconst submitButton = async event => {\n  const KEY = process.env.REACT_APP_API;\n  response = await Movie_API.get('/discover/movie', {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      include_adult: 'false',\n      page: '1',\n      with_genres: `${event.target.id}%2C%20`\n    }\n  });\n  console.log(response);\n};\n\nconst Filter = () => {\n  const [checked, setChecked] = useState(false);\n\n  const handleClick = () => {\n    setChecked(!checked);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }\n  }, \"Search using these filters \\u2B07\\uFE0F\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, genreName.map((name, k) => /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      display: \"inline-block\",\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, name)))), /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Filter;","map":{"version":3,"sources":["/Users/mohidinhassan/movie_website_app/src/Pages/Filter/index.js"],"names":["React","useState","Search","Header","MovieCard","Icon","Logo","Movie_API","response","genreID","genreName","submitButton","event","KEY","process","env","REACT_APP_API","get","params","api_key","language","include_adult","page","with_genres","target","id","console","log","Filter","checked","setChecked","handleClick","textAlign","map","name","k","display","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAO,oCAAP;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,IAAIC,QAAJ;AAEA,MAAMC,OAAO,GAAG,CACZ,EADY,EAEZ,EAFY,EAGZ,EAHY,EAIZ,EAJY,EAKZ,EALY,EAMZ,EANY,EAOZ,EAPY,EAQZ,KARY,EASZ,EATY,EAUZ,EAVY,EAWZ,EAXY,EAYZ,KAZY,EAaZ,IAbY,EAcZ,KAdY,EAeZ,GAfY,EAgBZ,KAhBY,EAiBZ,EAjBY,EAkBZ,KAlBY,EAmBZ,EAnBY,CAAhB;AAsBA,MAAMC,SAAS,GAAG,CACd,QADc,EAEd,WAFc,EAGd,WAHc,EAId,QAJc,EAKd,OALc,EAMd,aANc,EAOd,OAPc,EAQd,QARc,EASd,SATc,EAUd,SAVc,EAWd,QAXc,EAYd,OAZc,EAad,SAbc,EAcd,SAdc,EAed,iBAfc,EAgBd,UAhBc,EAiBd,UAjBc,EAkBd,KAlBc,EAmBd,SAnBc,CAAlB;;AAwBA,MAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAC9B,QAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AAECR,EAAAA,QAAQ,GAAG,MAAMD,SAAS,CAACU,GAAV,CAAc,iBAAd,EAAiC;AAC/CC,IAAAA,MAAM,EAAC;AACHC,MAAAA,OAAO,EAAEN,GADN;AAEHO,MAAAA,QAAQ,EAAE,OAFP;AAGHC,MAAAA,aAAa,EAAE,OAHZ;AAIHC,MAAAA,IAAI,EAAE,GAJH;AAKHC,MAAAA,WAAW,EAAG,GAAEX,KAAK,CAACY,MAAN,CAAaC,EAAG;AAL7B;AADwC,GAAjC,CAAjB;AAUDC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;AAGP,CAhBD;;AAmBA,MAAMoB,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAM8B,WAAW,GAAG,MAAK;AACrBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAGH,GAJD;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAGG;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAC;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAHH,eAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtB,SAAS,CAACuB,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,kBACX;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC,cAAT;AAAyBC,MAAAA,MAAM,EAAC;AAAhC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDH,IAAxD,CADH,CADL,CADD,CANH,eAkBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CADJ;AAyBH,CApCD;;AAsCA,eAAeN,MAAf","sourcesContent":["import React, {useState} from 'react'\nimport Search from '../../components/Search'\nimport Header from '../../components/Header'\nimport MovieCard from '../../components/Movies/MovieCard'\nimport Icon from '../../components/Icon'\nimport '../../components/Search/Search.css'\nimport Logo from '../../components/TMDB-Image'\nimport Movie_API from '../../api/Movie_API'\n\nlet response;\n\nconst genreID = [\n    28,\n    12,\n    16,\n    35,\n    80,\n    99,\n    18,\n    10751,\n    14,\n    36,\n    27,\n    10402,\n    9648,\n    10749,\n    878,\n    10770,\n    53,\n    10752,\n    37\n]\n\nconst genreName = [\n    'Action',\n    'Adventure',\n    'Animation',\n    'Comedy',\n    'Crime',\n    'Documentary',\n    'Drama',\n    'Family',\n    'Fantasy',\n    'History',\n    'Horror',\n    'Music',\n    'Mystery',\n    'Romance',\n    \"Science Fiction\",\n    'TV Movie',\n    'Thriller',\n    'War',\n    'Western'\n\n]\n\n\nconst submitButton = async (event) => {\n        const KEY = process.env.REACT_APP_API\n\n         response = await Movie_API.get('/discover/movie', {\n            params:{\n                api_key: KEY,\n                language: 'en-US',\n                include_adult: 'false',\n                page: '1',\n                with_genres: `${event.target.id}%2C%20`\n            }\n        })\n\n        console.log(response)\n\n        \n}\n\n\nconst Filter = () => {\n    const [checked, setChecked] = useState(false)\n\n    const handleClick = () =>{ \n        setChecked(!checked)\n        \n\n    }\n    \n\n\n    return(\n        <div>\n           <Header />\n           <Icon />\n           <div style={{textAlign:\"center\"}}>\n                Search using these filters ⬇️\n           </div>\n           <div>\n            <form>\n                {genreName.map((name, k) => (\n                    <label style={{display:\"inline-block\", margin:'10px'}}>{name}\n                   \n                        </label>\n                ))}\n                \n\n            </form>\n            </div>\n\n            <Logo />\n\n            \n          \n        </div>\n    )\n}\n\nexport default Filter\n\n"]},"metadata":{},"sourceType":"module"}